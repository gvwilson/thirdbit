<h2>Software Design by Example</h2>

<div class="row">
  <div class="col-4">
    <p class="center">
      <a href="https://www.taylorfrancis.com/books/mono/10.1201/9781032725239/software-design-example-greg-wilson">
	<img src="@root/sdxpy/sdxpy-cover.png" alt="Book cover" width="60%" class="image centered">
      </a>
    </p>
    <p class="center">
      <a href="@root/sdxpy/">read online</a>
    </p>
  </div>
  <div class="col-4">
    <p>
      <a href="https://www.taylorfrancis.com/books/mono/10.1201/9781032725239/software-design-example-greg-wilson"><em>Software Design by Example: A Tool-Based Introduction with Python</em></a>
      and
      <a href="https://www.taylorfrancis.com/books/mono/10.1201/9781003317807/software-design-example-greg-wilson"><em>Software Design by Example: A Tool-Based Introduction with JavaScript</em></a>
      are both now available for purchase or to read online.
      All royalties from both books go to the
      <a href="https://www.reddoorshelter.ca/">Red Door Family Shelter</a> in Toronto.
    </p>
  </div>
  <div class="col-4">
    <p class="center">
      <a href="https://www.taylorfrancis.com/books/mono/10.1201/9781003317807/software-design-example-greg-wilson">
	<img src="@root/sdxjs/sdxjs-cover.png" alt="Book cover" width="60%" class="image centered">
      </a>
    </p>
    <p class="center">
      <a href="@root/sdxjs/">read online</a>
    </p>
  </div>
</div>
<div class="row">
  <div class="col-4">
    <blockquote>
      The book is really bloody lovely.
      <br>
      — <a href="https://blog.djnavarro.net/posts/2023-05-31_software-design-by-example/">Danielle Navarro</a>
    </blockquote>
    <blockquote>
      This book is both a great refresher if you've not worked with Python in a long time,
      or your next textbook if you know just enough to be a little dangerous and want to level up.
      The exercises being tool-based means the experience gained will instantly feel applicable
      to whatever you end up using the language for.
      <br>
      - <a href="https://jennschiffer.com/">Jenn Schiffer</a>
    </blockquote>
    <blockquote>
      This is my new favorite book on the art of writing software.
      There is so much  to like about it—the way it leads the reader to explore and develop their understanding,
      the choice of projects and examples,
      the clarity of the instruction,
      the Creative Commons license,
      and much more.
      It will be my first recommendation for people looking to really learn professional development,
      either on their own or in a classroom setting.
      <br>
      - <a href="https://naomiceder.tech/">Naomi Ceder</a>
    </blockquote>
    <blockquote>
      Blending computer science with sound software engineering practices (with citations!)
      is difficult enough on its own,
      but this book guides the reader through practical design patterns that they can put into practice.
      The addition of historic anecdotes gives readers extra context for what they've learned
      and brings theory back to practice.
      <br>
      - <a href="https://www.juliaferraioli.com/">Julia Ferraioli</a>
    </blockquote>
  </div>
  <div class="col-4">
    <blockquote>
      There's a lot of books on programming
      but fewer books that couple software development with effective and practical use of tools,
      presenting a language not as a main course but as a part of an engineering ecosystem.
      Greg Wilson's book hits all the right notes in bringing together theory, pragmatism, and best practices.
      <br>
      – <a href="https://emilygorcenski.com/post/book-report-software-design-by-example-by-greg-wilson/">Emily Gorcenski</a>
    </blockquote>
    <blockquote>
      Rather than stacking up isolated examples divorced from practical use cases,
      this book teaches concepts the way we use them: in collaboration with one another.
      Filled with both pragmatic advice and juicy historical nuggets,
      this book just might manage to do the thing I've tried to do in classrooms for half a decade:
      transfer basic engineering skills
      while conveying what it's like to manage complex software projects.
      <br>
      - <a href="https://chelseatroy.com/">Chelsea Troy</a>
    </blockquote>
    <blockquote>
      I am v much enjoying gvwilson's book <em>Software Design by Example</em>.
      It makes me miss teaching, it would be such a fun text to use!
      <br>
      – <a href="https://mastodon.social/@jenn@pixel.kitchen/109985276835264400">Jenn Schiffer</a>
    </blockquote>
    <blockquote>
      I know I can share this book with folk in the confidence that
      they'll get a guided experience that's both accessible and comprehensive,
      leaving them with real world software skills.
      Teaching using examples makes the techniques meaningful and tangible to the learner
      which is in itself a great motivator,
      and the use of tooling examples is a bonus.
      <br>
      - <a href="https://www.benormal.info/">Sue Smith</a>
    </blockquote>
  </div>
  <div class="col-4">
    <blockquote>
      <em>Software Design by Example</em> is the book I'll recommend to every new dev…
      It is nice to you.
      It wants you to succeed…
      It's a bridge from "learn to program" to working programmer.
      <br>
      – <a href="https://jessitron.com/2023/02/20/book-review-software-design-by-example/">Jessica Kerr</a>
    </blockquote>
    <blockquote>
      I've been using this book to teach software design to an undergraduate class of 250 students,
      and the students and I love it!
      The positive impact of the book is evident from the improvements in student grades
      and the quality of their practical assignments,
      reflecting the substantial learning that's taking place.
      It's been a joy to see them feel so equipped and inspired.
      <br>
      - <a href="https://sback.it/">Prof. Alberto Bacchelli</a>
    </blockquote>
    <blockquote>
      The book is an excellent guide for anyone going from "just programming" to building larger projects.
      It's like a choose-your-own adventure,
      but the adventure is learning to build very complex software as a composition of much simpler patterns.
      <br>
      - <a href="https://jenniferplusplus.com/">Jennifer Moore</a>
    </blockquote>
    <blockquote>
      This is an absolutely marvelous book.
      Very rarely do insightful diagrams,
      contentious syntax disambiguation,
      and thoughtful attention to how humans learn and absorb information come together in a coherent package like this.
      It is exactly the sort of book I wish I'd had at the start of my programming journey;
      it would've saved me from countless lessons learned the hard way.
      <br>
      - <a href="https://hazelweakly.me/">Hazel Weakly</a>
    </blockquote>
  </div>
</div>
