schema: "harper-lite 0.1"
title: "Software Carpentry: The Unix Shell"
url: http://swcarpentry.github.io/shell-novice/
abstract: >
  The Unix shell has been around longer than most of its users have been alive.
  It has survived so long because it’s a power tool that allows people to do complex things
  with just a few keystrokes.
  More importantly,
  it helps them combine existing programs in new ways and automate repetitive tasks.
  This lesson will start you on a path towards using the shell effectively.
version: "2019-06"
contributor:
  - "François Michonneau <francois@carpentries.org>"
  - "Greg Wilson <gvwilson@third-bit.com"
package: https://github.com/swcarpentry/shell-novice/archive/v2019.06.1.zip
license: https://raw.githubusercontent.com/swcarpentry/shell-novice/gh-pages/LICENSE.md
requirements:
  - Bash
prereq:
  - "Explain the difference between a file and a folder."
postreq:
  - "Explain how the shell relates to the keyboard, the screen, the operating system, and users' programs."
  - "Construct absolute and relative paths that identify specific files and directories."
  - "Create a directory hierarchy that matches a given diagram."
  - "Create files in that hierarchy using an editor."
  - "Delete, copy and move specified files and/or directories."
  - "Redirect a command's output to a file."
  - "Process a file instead of keyboard input using redirection."
  - "Construct command pipelines with two or more stages."
  - "Write a loop that applies one or more commands separately to each file in a set of files."
  - "Explain the difference between a variable's name and its value."
  - "Explain why spaces and some punctuation characters shouldn't be used in file names."
  - "Demonstrate how to see and re-run recent commands."
  - "Write a shell script that operates on a set of files defined by the user on the command line."
teaches:
  - "absolute path"
  - "command flags"
  - "command history"
  - "pipe"
  - "redirection"
  - "relative path"
  - "shell"
notes: >
  - Usually takes three hours to deliver (hands-on).
  - Learners must have the Bash shell (or compatible).
    - See `INSTALL.txt` in the lesson for instructions on Windows setup.
  - Uses the Nano editor (lowest common denominator).
    - Learners are often confused by "dual personality" windows (editor inside shell).
  - Instructor should use a plain shell prompt (no date, directory, or Git branch info).
