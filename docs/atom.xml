<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>The Third Bit</title>
 <link href="https://third-bit.com/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2025-07-18T00:00:00Z</updated>
 <id>https://third-bit.com/</id>
 <author>
   <name>Greg Wilson</name>
   <email>gvwilson@third-bit.com</email>
 </author>
 
 <entry>
   <title>No Satisfaction</title>
   <link href="https://third-bit.com/2025/07/18/no-satisfaction/"/>
   <updated>2025-07-18T00:00:00Z</updated>
   <id>https://third-bit.com/2025/07/18/no-satisfaction/</id>
   <content type="html">&lt;p&gt;I don&amp;rsquo;t actually get much satisfaction from saying &amp;ldquo;I told you so&amp;rdquo;
because I only do it when the bad thing I was worried about has happened.
What motivates this observation is
the recent &lt;a href=&#34;https://metr.org/blog/2025-07-10-early-2025-ai-experienced-os-dev-study/&#34;&gt;METR paper&lt;/a&gt;
claiming that using AI lowers developers&amp;rsquo; productivity.
&lt;a href=&#34;https://bsky.app/profile/grimalkina.bsky.social/post/3ltpo634qc22l&#34;&gt;Cat Hicks&lt;/a&gt; and others
have done a better job of explaining the flaws in METR&amp;rsquo;s methodology than I possibly could.
What I want now is a workshop that teaches programmers
how to do trustworthy experiments on LLMs
and spot the mistakes in others&amp;rsquo; studies.&lt;/p&gt;
&lt;p&gt;Thousands and thousands of developers are trying to benchmark bots,
figure out if spicy autocomplete is making them more productive,
et endless cetera.
Most of those efforts are methodological and statistical dumpster fires;
while I don&amp;rsquo;t want to be cynical,
I think the same programmers who ignored &lt;a href=&#34;https://neverworkintheory.org/&#34;&gt;It Will Never Work in Theory&lt;/a&gt;
might pay attention to something with &amp;ldquo;AI&amp;rdquo; in its title.
Please,
someone,
save us from ourselves…&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Books For a Talk</title>
   <link href="https://third-bit.com/2025/07/16/books-for-a-talk/"/>
   <updated>2025-07-16T00:00:00Z</updated>
   <id>https://third-bit.com/2025/07/16/books-for-a-talk/</id>
   <content type="html">&lt;p&gt;I&amp;rsquo;m finally turning &lt;a href=&#34;https://third-bit.com/ideas/sdgc/&#34;&gt;my proposal&lt;/a&gt; for a book titled
&lt;em&gt;Sex and Drugs and Guns and Code: What Everyone in Tech Needs to Know About Politics, Economics, Justice, and Power&lt;/em&gt;
into a talk.
The sources I plan to mention are listed below;
I&amp;rsquo;d be grateful for pointers to ones I&amp;rsquo;ve missed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: my target audience is undergraduates in computer science and software engineering
who have never taken a class on politics, sociology, anthropology, or organizational behavior,
but dismiss those disciplines as &amp;ldquo;soft&amp;rdquo;.
If forced to wade through something dense and dull
they will dutifully parrot what they think they&amp;rsquo;re supposed to in order to get a grade,
but not change their view of the world in any substantial way.
In order to have impact,
this book must be engaging;
serious academics may therefore dismiss it as &amp;ldquo;light&amp;rdquo; or &amp;ldquo;shallow&amp;rdquo;,
but there&amp;rsquo;s no point being right if no one hears you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Examples of humanist analyses in software engineering:&lt;ul&gt;
&lt;li&gt;Petre: &lt;a href=&#34;https://dl.acm.org/doi/10.5555/2486788.2486883&#34;&gt;&amp;ldquo;UML in Practice&amp;rdquo;&lt;/a&gt; (2013)&lt;/li&gt;
&lt;li&gt;Steinmacher et al: &lt;a href=&#34;https://doi.org/10.1145/2675133.2675215&#34;&gt;&amp;ldquo;Social Barriers Faced by Newcomers Placing Their First Contribution in Open Source Software Projects&amp;rdquo;&lt;/a&gt; (2015)&lt;/li&gt;
&lt;li&gt;Sedano et al: &lt;a href=&#34;http://dx.doi.org/10.1109/icse.2017.20&#34;&gt;&amp;ldquo;Software Development Waste&amp;rdquo;&lt;/a&gt; (2017)&lt;/li&gt;
&lt;li&gt;Hicks: &lt;a href=&#34;https://www.catharsisinsight.com/reports&#34;&gt;&amp;ldquo;It&amp;rsquo;s Like Coding in the Dark&amp;rdquo;&lt;/a&gt; (2022)&lt;/li&gt;
&lt;li&gt;See &lt;a href=&#34;https://third-bit.com/2022/12/29/the-fourth-tradition/&#34;&gt;The Fourth Tradition&lt;/a&gt; for more background&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What &lt;a href=&#34;https://third-bit.com/2024/12/03/software-engineering-management-books/&#34;&gt;software engineering management books&lt;/a&gt; &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; talk about:&lt;ul&gt;
&lt;li&gt;Labor rights&lt;/li&gt;
&lt;li&gt;Workplace discrimination: less than 8 pages between 12 books&lt;/li&gt;
&lt;li&gt;Professional liability (or rather, why there isn&amp;rsquo;t any)&lt;/li&gt;
&lt;li&gt;Regulatory capture&lt;/li&gt;
&lt;li&gt;Co-operatives and other organizational models&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Books that are earnest but will put most programmers to sleep:&lt;ul&gt;
&lt;li&gt;Steen: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780367542436&#34;&gt;Ethics for People Who Work in Tech&lt;/a&gt;&lt;/em&gt; (2022)&lt;/li&gt;
&lt;li&gt;Goltz &amp;amp; Dowdesell: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781032275055&#34;&gt;Real World AI Ethics for Data Scientists&lt;/a&gt;&lt;/em&gt; (2023)&lt;/li&gt;
&lt;li&gt;Schlossberger: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781032151120&#34;&gt;Ethical Engineering: A Practical Guide with Case Studies&lt;/a&gt;&lt;/em&gt; (2023)&lt;/li&gt;
&lt;li&gt;Wendorff: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781484273791&#34;&gt;Politics in Software Development&lt;/a&gt;&lt;/em&gt;(2022)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Books that prove these topics can be interesting:&lt;ul&gt;
&lt;li&gt;Levitt &amp;amp; Dubner: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780061234002&#34;&gt;Freakonomics&lt;/a&gt;&lt;/em&gt; (2006)&lt;ul&gt;
&lt;li&gt;Preaches the neoliberal gospel that the only valid way to analyze individual behavior is maximization of wealth…&lt;/li&gt;
&lt;li&gt;…which is provably wrong, but their writing is so engaging that this is possibly the most effective piece of propaganda in English in the last 30 years&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Wainright: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781610397704&#34;&gt;Narconomics: How to Run a Drug Cartel&lt;/a&gt;&lt;/em&gt; (2017)&lt;ul&gt;
&lt;li&gt;Turns out that marketing and HR are big challenges for crime syndicates…&lt;/li&gt;
&lt;li&gt;…and you can learn a lot about how legitimate business works by looking at ones that ignore the legal system&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;d like to see a book comparing big tech to drug cartels&lt;ul&gt;
&lt;li&gt;Big tech companies sell deliberately addictive products…&lt;/li&gt;
&lt;li&gt;…treat the law as a business expense…&lt;/li&gt;
&lt;li&gt;…and are frequently run by narcissists&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Raymond: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781565927247&#34;&gt;The Cathedral and the Bazaar&lt;/a&gt;&lt;/em&gt; (1999)&lt;ul&gt;
&lt;li&gt;Popularized a compelling but misleading myth about the social organization of open source development&lt;/li&gt;
&lt;li&gt;Part of the point of &lt;em&gt;this&lt;/em&gt; book is to get readers to the point where they understand why it was wrong &lt;em&gt;and&lt;/em&gt; why it was popular&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bellotti: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781718501188&#34;&gt;Kill It With Fire: Manage Aging Computer Systems (and Future Proof Modern Ones)&lt;/a&gt;&lt;/em&gt; (2021)&lt;ul&gt;
&lt;li&gt;A critical but compassionate look at legacy systems, why they persist, and how to change them&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Books that I think every software engineer should read (but know they won&amp;rsquo;t, hence the needed to summarize):&lt;ul&gt;
&lt;li&gt;Douglas: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780415289955&#34;&gt;Purity and Danger: An Analysis of Concepts of Pollution and Taboo&lt;/a&gt;&lt;/em&gt; (2002)&lt;/li&gt;
&lt;li&gt;Davies: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781982114947&#34;&gt;Lying for Money: How Legendary Frauds Reveal the Workings of the World&lt;/a&gt;&lt;/em&gt; (2022)&lt;/li&gt;
&lt;li&gt;Baetjer: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780818677793&#34;&gt;Software as Capital: An Economic Perspective on Software Engineering&lt;/a&gt;&lt;/em&gt; (1997)&lt;/li&gt;
&lt;li&gt;Scott: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780300078152&#34;&gt;Seeing Like a State: How Certain Schemes to Improve the Human Condition Have Failed&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Phillips Rozworski: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781786635167&#34;&gt;The People&amp;rsquo;s Republic of Walmart&lt;/a&gt;&lt;/em&gt; (2019)&lt;/li&gt;
&lt;li&gt;Wilkinson &amp;amp; Pickett: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781608193417&#34;&gt;The Spirit Level&lt;/a&gt;&lt;/em&gt; (2011)&lt;/li&gt;
&lt;li&gt;Achen &amp;amp; Bartels: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780691178240&#34;&gt;Democracy for Realists: Why Elections Do Not Produce Responsive Government&lt;/a&gt;&lt;/em&gt; (2017)&lt;/li&gt;
&lt;li&gt;de Mesquita &amp;amp; Smith: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781541701366&#34;&gt;The Dictator&amp;rsquo;s Handbook: Why Bad Behavior is Almost Always Good Politics&lt;/a&gt;&lt;/em&gt; (2022)&lt;/li&gt;
&lt;li&gt;Linklater: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781620402917&#34;&gt;Owning the Earth: The Transforming History of Land Ownership&lt;/a&gt;&lt;/em&gt; (2015)&lt;/li&gt;
&lt;li&gt;Bracha: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781108790697&#34;&gt;Owning Ideas: The Intellectual Origins of American Intellectual Property, 1790–1909&lt;/a&gt;&lt;/em&gt; (2019)&lt;/li&gt;
&lt;li&gt;Igo: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780674244795&#34;&gt;The Known Citizen: A History of Privacy in Modern America&lt;/a&gt;&lt;/em&gt; (2020)&lt;/li&gt;
&lt;li&gt;Young: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9798887440330&#34;&gt;Abolishing Fossil Fuels: Lessons From Movements That Won&lt;/a&gt;&lt;/em&gt; (2024)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most young programmers have only ever been exposed to one worldview:
the toxic strain of neoliberal capitalism favored by venture capitalists and their gushing fans in the tech media.
As inequality widens and racist nationalism makes a comeback,
as we do everything in our power to make climate change &lt;em&gt;worse&lt;/em&gt;
while companies like X, Facebook, and Shopify tie themselves in knots to avoid responsibility for their actions,
most programmers don&amp;rsquo;t have the intellectual tools to understand what&amp;rsquo;s wrong and how we might fix it.&lt;/p&gt;
&lt;p&gt;Lots of books give cogent answers to these questions,
but programmers who have never done a civics course
are not going to read nine thousand pages on a whim.
However,
they &lt;em&gt;might&lt;/em&gt; sit through a one-semester course that explains why the human side of software engineering
is harder than the technical side.
This talk outlines what such a course might cover:
why &amp;ldquo;flat&amp;rdquo; organizations make power imbalances worse rather than better,
why discrimination persists despite its economic inefficiency,
how regulatory capture works,
why Americans keep shooting one another,
and what can we learn about big tech by studying drug cartels.&lt;/p&gt;
&lt;/blockquote&gt;</content>
 </entry>
 
 <entry>
   <title>Some Testing Answers</title>
   <link href="https://third-bit.com/2025/05/19/some-testing-answers/"/>
   <updated>2025-05-19T00:00:00Z</updated>
   <id>https://third-bit.com/2025/05/19/some-testing-answers/</id>
   <content type="html">&lt;p&gt;A month ago I &lt;a href=&#34;https://third-bit.com/2025/04/20/a-testing-question/&#34;&gt;asked for advice&lt;/a&gt; on testing a little piece of Python
that fills a grid using a random walk.
&lt;a href=&#34;https://stochasticsolutions.com/&#34;&gt;Nick Radcliffe&lt;/a&gt;,
a former colleague who is writing a book on test-driven data analysis,
suggested that one way to test the code is to put move generation in a function of its own,
call that function a few hundred times,
and check that the results are evenly distributed
(e.g., each of the four moves appears 20-30% of the time).
If not,
double the number of moves generated,
check again,
and repeat until either the distribution converges
or you decide that it&amp;rsquo;s not going to.
This approach ensures that tests run quickly most of the time,
and it did indeed catch a bug when I moved from 4-way steps to 8-way (i.e., allowed diagonal moves).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nathanfurnal.xyz/&#34;&gt;Nathan Furnal&lt;/a&gt; suggested a similar approach.
If we generate 30 moves,
the probability of never seeing one of the four possible moves is less than 0.02%.
If we increase the number of moves to 100 (which only takes 61 microseconds on my five-year-old laptop)
the odds of not seeing one of the moves drop to one in 10&lt;sup&gt;13&lt;/sup&gt;.
If we&amp;rsquo;re running the tests 1000 times a day,
we can expect one false positive every ten million years or so.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve added both tests to my test suite,
but would appreciate suggestions for others.
Testing in the face of randomness is more common and more important in (data) science
than in commercial software development;
as more and more applications incorporate small household spirits (i.e., genAI),
we&amp;rsquo;re going to have to figure out how to do this well.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Two Thirds of a Language</title>
   <link href="https://third-bit.com/2025/05/18/two-thirds-of-a-language/"/>
   <updated>2025-05-18T00:00:00Z</updated>
   <id>https://third-bit.com/2025/05/18/two-thirds-of-a-language/</id>
   <content type="html">&lt;p&gt;Inspired in part by posts online about this year&amp;rsquo;s PyCon,
I started to wonder how much of the language I actually use.
To answer the question,
I counted how many different types of nodes are provided by &lt;a href=&#34;https://docs.python.org/3/library/ast.html&#34;&gt;Python&amp;rsquo;s &lt;code&gt;ast&lt;/code&gt; module&lt;/a&gt;
and how many of those show up in the code I wrote for
&lt;a href=&#34;https://third-bit.com/sdxpy/&#34;&gt;&lt;em&gt;Software Design by Example&lt;/em&gt;&lt;/a&gt;.
The answer appears to be 60%,
i.e.,
I use a bit less than two-thirds of what Python 3.12 offers.
Other measures would give other answers—for example,
I expect that I use much, much less than 60% of Python&amp;rsquo;s standard library—but still,
it&amp;rsquo;s kind of interesting.&lt;/p&gt;
&lt;p&gt;I hope everyone&amp;rsquo;s having fun in Pittsburgh…&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Code&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;ast&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;pathlib&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ast_dict&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;getattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;available&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ast_dict&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;used&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;used&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;walk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;SyntaxError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;available: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;available&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;used: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;used&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;percentage: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;used&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;available&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.1f&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;unused&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;available&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;used&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;The Output&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;available: 136
used: 81
percentage: 59.6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Appearance on SustainOSS Podcast</title>
   <link href="https://third-bit.com/2025/05/16/appearance-on-sustain-oss/"/>
   <updated>2025-05-16T00:00:00Z</updated>
   <id>https://third-bit.com/2025/05/16/appearance-on-sustain-oss/</id>
   <content type="html">&lt;p&gt;Richard Littauer interviews Marianne Bellotti and yours truly on the &lt;a href=&#34;https://podcast.sustainoss.org/269&#34;&gt;SustainOSS podcast&lt;/a&gt;
about the paper &amp;ldquo;&lt;a href=&#34;https://arxiv.org/abs/2505.06484&#34;&gt;10 quick tips for making your software outlive your job&lt;/a&gt;&amp;rdquo;.
I sound like I&amp;rsquo;m speaking from the bottom of a fifty gallon drum,
but I hope it&amp;rsquo;s worth listening to despite that.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>We Weren&#39;t Ready for the Flood</title>
   <link href="https://third-bit.com/2025/05/01/we-werent-ready-for-the-flood/"/>
   <updated>2025-05-01T00:00:00Z</updated>
   <id>https://third-bit.com/2025/05/01/we-werent-ready-for-the-flood/</id>
   <content type="html">&lt;p&gt;In the end I decided not to go to &lt;a href=&#34;https://conf.researchr.org/home/icse-2025&#34;&gt;ICSE 2025&lt;/a&gt; in Ottawa.
I would have enjoyed catching up with friends
and having coffee with people I&amp;rsquo;ve only ever chatted to online,
but I couldn&amp;rsquo;t justify the time and expense.
I also didn&amp;rsquo;t know what I could say that people wouldn&amp;rsquo;t have grown tired of hearing:
as &lt;a href=&#34;https://third-bit.com/2020/07/09/acm-sigsoft-award/&#34;&gt;I wrote in 2020&lt;/a&gt;,
I&amp;rsquo;ve had no impact on software engineering research or education despite years of trying,
and I think people have grown weary of my jeremiads.&lt;/p&gt;
&lt;p&gt;If I &lt;em&gt;had&lt;/em&gt; gone,
though,
here&amp;rsquo;s what I would have said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We have been studying software engineers and software engineering for over fifty years.
Despite that,
we still don&amp;rsquo;t have an agreed-upon way to measure developers&amp;rsquo; productivity,
which means we can&amp;rsquo;t answer the question,
&amp;ldquo;Is AI helping or not?&amp;rdquo;
And we still don&amp;rsquo;t teach empirical software engineering to undergraduates,
which means that most programmers don&amp;rsquo;t know enough to know that
most of the answers they&amp;rsquo;re seeing and hearing aren&amp;rsquo;t just wrong,
they&amp;rsquo;re nonsensical.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The flood came and we weren&amp;rsquo;t ready;
I wish I believed that we would be for the next one.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Why yes, I &lt;em&gt;do&lt;/em&gt; have a suggestion about how to get ready:
turn &lt;em&gt;&lt;a href=&#34;https://link.springer.com/book/10.1007/978-1-4842-4221-6&#34;&gt;Rethinking Productivity in Software Engineering&lt;/a&gt;&lt;/em&gt;
into an undergraduate course
that teaches students the methods used to answer questions like this,
how to use those methods themselves,
and how to tell good science from splackulent crap
like the &amp;ldquo;ghost engineers&amp;rdquo; screed that got so much attention in late 2024.
I realize data science no longer makes university administrators salivate the way it did a few years ago,
but if you call the course &amp;ldquo;Data Science for Software Engineers&amp;rdquo;
you&amp;rsquo;re bound to get a few takers.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Lazy Loading a Data Package</title>
   <link href="https://third-bit.com/2025/04/21/lazy-loading-data-package/"/>
   <updated>2025-04-21T00:00:00Z</updated>
   <id>https://third-bit.com/2025/04/21/lazy-loading-data-package/</id>
   <content type="html">&lt;p&gt;&lt;em&gt;Later: see the bottom of this post for a much less frightening solution.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;R has the notion of a &amp;ldquo;data package&amp;rdquo;,
which looks and feels like a code package
except its primary purpose is to provide a dataset.
One of the key features of such packages is that the data isn&amp;rsquo;t loaded into memory
unless and until it&amp;rsquo;s needed,
which is known as &lt;em&gt;lazy loading&lt;/em&gt;.
The code below shows my attempt to do this in Python;
I&amp;rsquo;d &lt;a href=&#34;mailto:gvwilson@third-bit.com&#34;&gt;be grateful&lt;/a&gt; for pointers to prior art
and advice on how to simplify it.&lt;/p&gt;
&lt;h2&gt;Desired Outcome&lt;/h2&gt;
&lt;p&gt;Importing the package does &lt;em&gt;not&lt;/em&gt; load the data.
Instead,
each dataset in the package is loaded into memory the first time it is referenced.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;example&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;# data not loaded&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;machines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;# &amp;#39;machines&amp;#39; data loaded here&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;persons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;# &amp;#39;persons&amp;#39; data loaded here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;What the Package Author Writes&lt;/h2&gt;
&lt;p&gt;The programmer who wants to provide the data package must:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;define a class derived from &lt;code&gt;BaseDatasetLoader&lt;/code&gt;
    with a zero-argument method for each dataset;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mark those methods as &lt;a href=&#34;https://docs.python.org/3/library/functools.html#functools.cached_property&#34;&gt;cached properties&lt;/a&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;call their classes&amp;rsquo; &lt;code&gt;install&lt;/code&gt; method with their module&amp;rsquo;s name as an argument;
    and&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;put their data files in a directory called &lt;code&gt;data&lt;/code&gt; in the top level of their project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example,
the package &lt;code&gt;example&lt;/code&gt; that provides persons and machines would be structured like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;.
├── data
│   ├── machines.csv
│   └── persons.csv
├── example
│   └── __init__.py
└── pyproject.toml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here&amp;rsquo;s the code in &lt;code&gt;__init__.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;functools&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cached_property&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;datapkg.package&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BaseDatasetLoader&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;_Loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseDatasetLoader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Example dataset loader.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@cached_property&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;machines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;machines.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@cached_property&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;persons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;persons.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Set up lazy loading - automatically discovers cached properties&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;_Loader&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;install&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;d like to find a way to automate the installation step
so that programmers only have to define the class,
but I haven&amp;rsquo;t figured out a way yet.&lt;/p&gt;
&lt;h2&gt;Behind the Curtain&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;datapkg&lt;/code&gt; library defines three things,
two of which programmers (hopefully) won&amp;rsquo;t need to know about.
The thing they &lt;em&gt;do&lt;/em&gt; need to be aware of is
the base class from which their data loader classes are derived.
For demo purposes,
&lt;code&gt;BaseDatasetLoader&lt;/code&gt; assumes (i.e., requires) that data lives in a &lt;code&gt;data&lt;/code&gt; directory
beside the package source code directory
and that there is a cached property in the user-defined class derived from &lt;code&gt;BaseDatasetLoader&lt;/code&gt;
corresponding to each of the datasets:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BaseDatasetLoader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Base class for dataset loaders.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Where datasets are located.&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@classmethod&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;discover_cached_properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Discover all cached_property attributes in this class (i.e., datasets).&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;attr&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inspect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getmembers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cached_property&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@classmethod&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;install&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Set up lazy loading for a data package.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&#34;n&#34;&gt;loader_instance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;exported_names&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;discover_cached_properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;create_lazy_package&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loader_instance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exported_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Load data from a CSV file.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseDatasetLoader&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;joinpath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;BaseDatasetLoader&lt;/code&gt; relies on &lt;code&gt;create_lazy_package&lt;/code&gt;,
which looks up a module and replaces it with a lazy-loading module,
copying over the attributes of the original model along the way
and then exporting all the module&amp;rsquo;s names:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;create_lazy_package&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Set up lazy loading for a data package.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;original_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;lazy_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;lazy_module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__dict__&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;original_module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__dict__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lazy_module&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;lazy_module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__all__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;names&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;names&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally,
&lt;code&gt;LazyModule&lt;/code&gt; intercepts attempts to get the module&amp;rsquo;s attributes
and defers them to the user-defined class derived from &lt;code&gt;BaseDatasetLoader&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;types&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ModuleType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;A module that lazily loads datasets when attributes are accessed.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Initialize a lazy module.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_loader&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loader&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__getattr__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Get an attribute from the loader when not found in the module.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;getattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;AttributeError&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;AttributeError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Module &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39; has no attribute &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;exc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Building the Package&lt;/h2&gt;
&lt;p&gt;Life&amp;rsquo;s not complete these days without a &lt;code&gt;pyproject.toml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;example&amp;quot;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;0.1.0&amp;quot;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;description&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;An example data package&amp;quot;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dependencies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;requires&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;gt;=3.11&amp;quot;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;requires&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;hatchling&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;hatchling.build&amp;quot;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hatch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wheel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;datapkg&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hatch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;force&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The trick is that last line,
which forces the build system to include the contents of the &lt;code&gt;data&lt;/code&gt; directory in the package.
(And yes, both uses of the word &lt;code&gt;data&lt;/code&gt; in that line must be quoted:
it&amp;rsquo;s TOML&amp;rsquo;s way of defining a key-value table.
I miss my &lt;code&gt;package.json&lt;/code&gt; files every day…)&lt;/p&gt;
&lt;h2&gt;The Simpler Version&lt;/h2&gt;
&lt;p&gt;The solution described above is very complex,
and it would be unreasonable to expect most data scientists to debug subtle mistakes.
If we are willing to use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;datapkg&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datapkg&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datapkg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;machines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then the &lt;code&gt;pyproject.toml&lt;/code&gt; file stays as it is and the Python becomes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;csv&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;functools&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cached_property&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;importlib&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;_loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@cached_property&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;machines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;machines.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@cached_property&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;persons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;persons.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;_load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Load data from a CSV file.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;loading &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;joinpath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;datapkg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;__all__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;datapkg&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The Even Simpler Version&lt;/h2&gt;
&lt;p&gt;Nat Knight suggested an even simpler approach:
use &lt;a href=&#34;https://peps.python.org/pep-0562/&#34;&gt;a module-level &lt;code&gt;__getattr__&lt;/code&gt; function&lt;/a&gt;.
I didn&amp;rsquo;t even know these existed,
but they make the code &lt;em&gt;much&lt;/em&gt; easier to understand:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;csv&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;importlib&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;AVAILABLE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;machines&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;machines.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;cached&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;persons&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;persons.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;cached&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__getattr__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AVAILABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;AttributeError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; does not have &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AVAILABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;cached&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;cached&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;cached&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;_load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;joinpath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thanks, Nat—this is what I&amp;rsquo;m going with.
But also:
damn,
I remember when Python was a small enough language that I actually understood it…&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>A Testing Question</title>
   <link href="https://third-bit.com/2025/04/20/a-testing-question/"/>
   <updated>2025-04-20T00:00:00Z</updated>
   <id>https://third-bit.com/2025/04/20/a-testing-question/</id>
   <content type="html">&lt;p&gt;I have been thinking some more about how to teach testing to scientists who are learning how to program,
and I&amp;rsquo;m hoping one of my readers will have suggestions.
The bit of Python below creates a square NxN grid and then fills it using a random orthogonal walk.
Each time the walker visits a cell, the cell&amp;rsquo;s count is incremented;
filling stops when the walker reaches the boundary (i.e., absorbing boundary conditions).&lt;/p&gt;
&lt;p&gt;How can I test this?
The easy bits are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generate a few hundred grids and make sure the boundary cells are all zero.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compare the sum of the grid values with the number of moves made by the walker (they should be equal).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Patch the random choice function to force a series of moves (e.g., always up) and then check the resulting grid.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, these tests are necessary but not sufficient.
If my choice of moves was biased in some direction,
for example,
none of these tests would reveal that.
If I generate enough grids and look at the distribution of values,
it should approximate a 2D Gaussian,
but I&amp;rsquo;d have to generate a &lt;em&gt;lot&lt;/em&gt; of grids to get close,
and it&amp;rsquo;s difficult to specify what &amp;ldquo;close&amp;rdquo; actually means.
Is 20% relative error after 1000 grids good enough?
That test will pass for some random number generation seeds and fail for others;
I could tweak the seed until the test passes,
but that feels as grubby as &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_dredging&#34;&gt;p-hacking&lt;/a&gt;.
If you have suggestions,
please &lt;a href=&#34;mailto:gvwilson@third-bit.com&#34;&gt;get in touch&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;The Code&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;argparse&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;csv&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;io&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Store a grid of numbers.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Construct empty grid.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Grid size must be positive not &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__getitem__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Get grid element.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__setitem__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Set grid element.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__str__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Convert to string.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringIO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writerows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getvalue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;cmdline_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Parse command-line arguments.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argparse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;--seed&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;required&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;RNG seed&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;--size&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;required&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;grid size&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;fill_grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Fill in a grid.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;moves&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;center&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;size_1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;center&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;moves&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmdline_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;fill_grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The Reveal&lt;/h2&gt;
&lt;p&gt;Did you notice the bug?
&lt;code&gt;[0, -1]&lt;/code&gt; is repeated in the list of available moves;
the last entry should be &lt;code&gt;[0, 1]&lt;/code&gt;.
This was an actual typo in an early draft of this function,
and none of my tests spotted it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The boundary cells of all grids are still zero.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The sum of the grid&amp;rsquo;s values is still the number of moves.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Patching the random choice function to force a series of moves
    &lt;em&gt;fixes the underlying bug&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If I had used &lt;code&gt;random.choice(list(range(len(moves))))&lt;/code&gt; to choose an index into &lt;code&gt;moves&lt;/code&gt;
and then used that move,
the final test might have revealed the problem,
but none of my statistical tests detected it,
and that scares me.&lt;/p&gt;
&lt;h2&gt;Another Example&lt;/h2&gt;
&lt;p&gt;Another way to fill a grid is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Invasion_percolation&#34;&gt;invasion percolation&lt;/a&gt;.
In pseudo-Python, it works like this—or rather,
this code &lt;em&gt;almost&lt;/em&gt; does the right thing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;invasion_percolation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Create grid of random numbers&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Mark the central cell&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MARKED&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Repeat until the marked region hits the boundary&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;find_next_cell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MARKED&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Find the next cell to fill&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;find_next_cell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Set min_val to Infinity to ensure first cell qualifies&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;min_x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Infinity&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Check all cells&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# Already filled&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MARKED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# Not adjacent to a marked cell&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adjacent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# We have seen a lower value&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# A new winner&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;min_x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Report results&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Did you spot the problem?
I didn&amp;rsquo;t:
I used a variation of this code for more than a year before realizing that
it is biased toward the (0, 0) corner of the grid.
To see why,
imagine that the entire &amp;ldquo;random&amp;rdquo; grid is filled with the value 1.
The first cell that the double loop finds
that&amp;rsquo;s adjacent to the already-filled region
will always be to the lower left of the filled region,
because that will always be the first time the double loop encounters the value 1.
Replacing the 1&amp;rsquo;s with random number in the range 0…depth doesn&amp;rsquo;t fix this flaw;
it just makes it harder to spot.&lt;/p&gt;
&lt;p&gt;The solution in this case is to find all the cells
that are adjacent to the already-filled region
&lt;em&gt;and&lt;/em&gt; which are tied for lowest value,
then choose one of those at random.
My question is,
what test(s) could I plausibly have written before I realized my mistake
that would have told me my implementation had introduced an unwanted bias?&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>A Dollar a Minute</title>
   <link href="https://third-bit.com/2025/04/18/a-dollar-a-minute/"/>
   <updated>2025-04-18T00:00:00Z</updated>
   <id>https://third-bit.com/2025/04/18/a-dollar-a-minute/</id>
   <content type="html">&lt;p&gt;Yesterday I wrote about &lt;a href=&#34;https://third-bit.com/2025/04/17/when-the-fire-comes/&#34;&gt;making contingency plans for research projects&lt;/a&gt;
in case the Trump administration&amp;rsquo;s attack on science reaches you.
Today&amp;rsquo;s topic is an even scarier scenario:
taxes on online services.
As far as I can tell,
there is no legal or technical obstacle to the American government mandating a dollar-a-minute tax
on video conferencing
for people outside the United States.
The machinery needed to charge people is already in place—Zoom,
Google Meet, and Microsoft Teams all offer paid plans—and
a quick check of IP addresses would correctly geolocate 99% of users.
(Yes,
you fool this using a VPN,
but only a handful of individuals would,
and companies aren&amp;rsquo;t going to flout the law that way.)&lt;/p&gt;
&lt;p&gt;If you want to hit businesses and middle-class voters in Canada, the EU, and elsewhere,
and raise a few billion dollars at the same time,
why &lt;em&gt;wouldn&amp;rsquo;t&lt;/em&gt; you do this?
Why wouldn&amp;rsquo;t you tell Google that it has to start charging foreigners a penny for each email
or ten cents a week for each kilobyte&amp;rsquo;s worth of docs?
Because people would just migrate to other services?
Please:
most of those other services are also US-based,
and if you&amp;rsquo;ve ever done a large service migration,
you&amp;rsquo;ll realize how much pain the word &amp;ldquo;just&amp;rdquo; is painting over.&lt;/p&gt;
&lt;p&gt;So here&amp;rsquo;s the scenario that actually keeps me up at night.
It&amp;rsquo;s July 2025.
The US economy is in a nosedive because of tariffs,
so Trump needs money &lt;em&gt;now&lt;/em&gt;.
Musk feels exposed:
the savings he promised DOGE would deliver haven&amp;rsquo;t materialized,
so he needs something to fend off the MAGA sharks who now smell blood in the water.
&amp;ldquo;Why should American companies be allowed to help foreigners compete with us &lt;em&gt;for free&lt;/em&gt;?&amp;rdquo;
he asks.
Slack, GitHub, Airtable:
everything business has gotten hooked on because it was free suddenly isn&amp;rsquo;t.
Move your data to another provider?
Sure,
here are the federally-mandated rates for exporting your data in bulk.
Go ahead,
sit down for a moment if you need too…&lt;/p&gt;
&lt;p&gt;The odds of this actually happening are low.
The odds of someone breaking into my house are also low,
but I still have insurance because that&amp;rsquo;s what sensible grownups do.
We can all now see the river rising;
it will be our own fault if we drown when the flood comes.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>When the Fire Comes</title>
   <link href="https://third-bit.com/2025/04/17/when-the-fire-comes/"/>
   <updated>2025-04-17T00:00:00Z</updated>
   <id>https://third-bit.com/2025/04/17/when-the-fire-comes/</id>
   <content type="html">&lt;p&gt;I grew up in a logging town in British Columbia.
There weren&amp;rsquo;t as many forest fires as there are now,
and they weren&amp;rsquo;t as severe,
but as July turned to August people would make sure they always had a full tank of gas
and a change of clothes packed for the kids.
They&amp;rsquo;d stop on the street to talk to their neighbors about who was going to look in on Mrs. Kerr
to make sure she was OK,
or ask the pharmacy for an extra order of tyheir prescription because,
well,
you never know,
do you?&lt;/p&gt;
&lt;p&gt;Forty-five years later
it&amp;rsquo;s time to start making plans like these for our research projects.
The Trump administration has launched an unprecedented assault on science;
thousands of people have been fired,
thousands of others have had their funding cut,
and things are going to get a lot worse before they (hopefully) get better.
What should you do if you&amp;rsquo;re a PI
and you get the email saying that some coked-up tech bro in Washington has cut your funding
because you used the word &amp;ldquo;diverse&amp;rdquo; in a grant application eight years ago?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.burntfen.com/&#34;&gt;Richard Littauer&lt;/a&gt; and others are putting together a paper
tentatively titled &amp;ldquo;10 quick tips for making your code last beyond your current job&amp;rdquo;,
and I&amp;rsquo;ll share a link to it when it&amp;rsquo;s ready to read,
but its recommendations are for the medium and long term.
What do you do &lt;em&gt;now&lt;/em&gt;
if you have until the end of the week to clean up and clear out?&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s assume your team includes one post-doc, three grad students, and half an RSE,
and that you are collaborating closely with people at two other institutions.
Your data, code, papers, and collective memory are scattered across Google Drive, Slack, GMail, GitHub,
and the departmental server.
Here&amp;rsquo;s what I think you should do:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Remember that &lt;em&gt;the only plan that works is one you&amp;rsquo;ve practiced&lt;/em&gt;
    (or as my dad once said, a full tank of gas is no use if you can&amp;rsquo;t find the car keys).
    Once you and your team have made a plan,
    try it out:
    you will immediately discover two things that don&amp;rsquo;t actually work
    and three others you have overlooked.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Make sure you can communicate with each other.&lt;/em&gt;
    My family didn&amp;rsquo;t own a walkie-talkie,
    but a lot of others did.
    Your team will need a way to coordinate without Slack or departmental email;
    a &lt;a href=&#34;https://signal.org/&#34;&gt;Signal&lt;/a&gt; group is one option,
    but a mailing list that includes everyone&amp;rsquo;s work and personal addresses
    is probably a better option.
    (Think attachments, search, etc.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Check your licenses.&lt;/em&gt;
    I hope you put open licenses on everything so that you&amp;rsquo;re legally allowed to do this;
    if not,
    bookmark this post and come back once you&amp;rsquo;ve done that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Copy everything.&lt;/em&gt;
    Sure, your code is in GitHub&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a class=&#34;footnote-ref&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, but what about your papers?
    Your grant applications?
    Your Slack conversations?
    It will take five minutes to make a (partial) list of everything you&amp;rsquo;ve looked at in the past six months;
    do that,
    then figure out how to dump it somewhere that &lt;em&gt;you&lt;/em&gt; control
    and that isn&amp;rsquo;t (as) likely to be impacted by random acts of government&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a class=&#34;footnote-ref&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.
    (For example, I now rely on a Canadian company called &lt;a href=&#34;https://www.sync.com/&#34;&gt;Sync&lt;/a&gt; to store my data.)
    In an ideal world you would use this as an opportunity to tidy everything up,
    but in an ideal world we wouldn&amp;rsquo;t be having this conversation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Write things down as they happen.&lt;/em&gt;
    You&amp;rsquo;re going to be making important decisions under pressure,
    with partial information,
    and with other people;
    point-form notes of everything your institution told you to do,
    everything you actually did,
    and everything you&amp;rsquo;ve learned along the way
    are going to be as important to getting through this
    as the logs that paramedics, nurses, and doctors keep in medical emergencies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Tell people what&amp;rsquo;s happening.&lt;/em&gt;
    Some of your colleagues will already have gone through this
    and will be able to offer advice;
    others who haven&amp;rsquo;t might still be able to help in unexpected ways.
    (&amp;ldquo;Why don&amp;rsquo;t you and your students come and spend a few days with my team?&amp;rdquo;
    wouldn&amp;rsquo;t normally bring tears to my eyes,
    but neither would someone offering to take the kids for ice cream while you&amp;rsquo;re setting up a tent.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Help others.&lt;/em&gt;
    Grassroots efforts like the &lt;a href=&#34;https://www.datarescueproject.org/&#34;&gt;Data Rescue Project&lt;/a&gt;
    are trying to coordinate work like this;
    if you aren&amp;rsquo;t immediately impacted,
    please help them out.
    And please ask your professional or scientific association to grow a spine
    and do something more than issue a press release.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Later: see also &lt;a href=&#34;https://third-bit.com/2025/04/18/a-dollar-a-minute/&#34;&gt;A Dollar a Minute&lt;/a&gt; and this partial list of places to run to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Communication&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/element-hq&#34;&gt;https://github.com/element-hq&lt;/a&gt; + &lt;a href=&#34;https://matrix.org/&#34;&gt;https://matrix.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mattermost.com/solutions/use-cases/self-sovereign-collaboration/&#34;&gt;https://mattermost.com/solutions/use-cases/self-sovereign-collaboration/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rocket.chat/&#34;&gt;https://www.rocket.chat/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2p.mirotalk.com/&#34;&gt;https://p2p.mirotalk.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Wiki&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bookstackapp.com/&#34;&gt;https://www.bookstackapp.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://js.wiki/&#34;&gt;https://js.wiki/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Project management&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.openproject.org/&#34;&gt;https://www.openproject.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://community.taiga.io/t/taiga-30min-setup/170&#34;&gt;https://community.taiga.io/t/taiga-30min-setup/170&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wekan/wekan&#34;&gt;https://github.com/wekan/wekan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leantime.io/all-about-open-source-project-management/&#34;&gt;https://leantime.io/all-about-open-source-project-management/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Git&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/go-gitea/gitea&#34;&gt;https://github.com/go-gitea/gitea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codeberg.org/forgejo/forgejo/&#34;&gt;https://codeberg.org/forgejo/forgejo/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.onedev.io/onedev/server&#34;&gt;https://code.onedev.io/onedev/server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Password manager&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dani-garcia/vaultwarden&#34;&gt;https://github.com/dani-garcia/vaultwarden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Docs&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.onlyoffice.com/&#34;&gt;https://www.onlyoffice.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.collaboraonline.com/collabora-online/&#34;&gt;https://www.collaboraonline.com/collabora-online/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zoho.com/pt-br/workplace/?src=zGlobalRelatedProducts&#34;&gt;https://www.zoho.com/pt-br/workplace/?src=zGlobalRelatedProducts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nextcloud/server&#34;&gt;https://github.com/nextcloud/server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/owncloud/core&#34;&gt;https://github.com/owncloud/core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hedgedoc.org/&#34;&gt;https://hedgedoc.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnote&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;There is no legal or technical reason why the US government couldn&amp;rsquo;t turn off access to GitHub (or Zoom, or Google Cloud) for people outside the US, or (more plausibly) put tariffs on their use. I&amp;rsquo;ll be doing another post about that scenario soon.&amp;#160;&lt;a class=&#34;footnote-backref&#34; href=&#34;#fnref:1&#34; title=&#34;Jump back to footnote 1 in the text&#34;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;I really wish &lt;a href=&#34;https://doi.org/10.1371/journal.pone.0010071&#34;&gt;BioTorrents&lt;/a&gt; had caught on. I bet a lot of other people do now too.&amp;#160;&lt;a class=&#34;footnote-backref&#34; href=&#34;#fnref:2&#34; title=&#34;Jump back to footnote 2 in the text&#34;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>No More Encyclopedias</title>
   <link href="https://third-bit.com/2025/04/14/no-more-encyclopedias/"/>
   <updated>2025-04-14T00:00:00Z</updated>
   <id>https://third-bit.com/2025/04/14/no-more-encyclopedias/</id>
   <content type="html">&lt;p&gt;There were three encyclopedias in our house when I was growing up:
one full of bright photographs and illustrations for children,
one with dense, dark text for grownups
(and teenagers who had outgrown the first one and would never admit they missed it),
and a third one in a box in the basement
that I discovered after &lt;a href=&#34;https://third-bit.com/2015/09/22/dad/&#34;&gt;my dad died&lt;/a&gt;.
There isn&amp;rsquo;t one in this house,
though,
because we have the internet at our fingertips.
&lt;a href=&#34;https://www.wikipedia.org/&#34;&gt;Wikipedia&lt;/a&gt; gives us short summaries when we need them,
and we can turn to various search engines and Q&amp;amp;A sites when we need to go further.&lt;/p&gt;
&lt;p&gt;What brought this to mind was reading Janssens and Nieuwdorp&amp;rsquo;s
&lt;a href=&#34;https://www.oreilly.com/library/view/python-polars-the/9781098156077/&#34;&gt;&lt;em&gt;Python Polars: The Definitive Guide&lt;/em&gt;&lt;/a&gt; over the weekend.
It&amp;rsquo;s well written,
but I don&amp;rsquo;t think I will ever look at it again.
Tables with one-line summaries of operators and aggregation functions
feel redundant when the documentation they&amp;rsquo;re taken from is a click away.
More importantly,
five-line examples showing how to use them are now also redundant thanks to AI tools.
&amp;ldquo;How do I find the three largest annual drops in overdose fatalities in this dataset?&amp;rdquo;
is now a question my computer can answer &lt;em&gt;and explain&lt;/em&gt;.
I never copied code directly from &lt;a href=&#34;https://claude.ai/&#34;&gt;Claude&lt;/a&gt; while rewriting &lt;a href=&#34;https://gvwilson.github.io/snailz/&#34;&gt;snailz&lt;/a&gt;,
but over and over I found myself asking a question,
looking at its answer,
nodding my way through its explanation,
and then modifying what it offered to solve my problem.&lt;/p&gt;
&lt;p&gt;Since technical books can&amp;rsquo;t address the specific in-the-moment need of the reader,
what role do they have (if any)?
I think the answer is now,
&amp;ldquo;To give readers the mental model they need to write a good prompt and then recognize and adapt a useful&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a class=&#34;footnote-ref&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; answer.&amp;rdquo;
If you don&amp;rsquo;t know what a cache is,
how hashing works,
or that HTML and source code are both represented in memory as trees,
you won&amp;rsquo;t be able to go as far as an LLM might take you.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t have this in mind when I wrote &lt;a href=&#34;https://third-bit.com/sdxpy/&#34;&gt;&lt;em&gt;Software Design by Example&lt;/em&gt;&lt;/a&gt;,
but in retrospect I think (or hope) that it meets this need.
Unfortunately,
I also think that LLMs (and &lt;a href=&#34;https://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; before it, and search before that)
are making people less patient with long-form technical prose.
I now struggle to read more than a few pages at a time,
even when the subject matter is as engrossing as &lt;a href=&#34;https://browser.engineering/&#34;&gt;this&lt;/a&gt;.
If I ever complete either of &lt;a href=&#34;https://gvwilson.github.io/rsdx/&#34;&gt;these&lt;/a&gt; &lt;a href=&#34;https://gvwilson.github.io/webonomicon/&#34;&gt;projects&lt;/a&gt;,
it will be because I think I have an answer to this riddle that&amp;rsquo;s worth trying out.
If you have one,
I&amp;rsquo;d &lt;a href=&#34;mailto:gvwilson@third-bit.com&#34;&gt;like to hear it&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;footnote&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;The word &amp;ldquo;useful&amp;rdquo; is important: it sometimes took several tries to get &lt;a href=&#34;https://claude.ai/&#34;&gt;Claude&lt;/a&gt; to solve the problem I actually had, and occasionally it simply couldn&amp;rsquo;t.&amp;#160;&lt;a class=&#34;footnote-backref&#34; href=&#34;#fnref:1&#34; title=&#34;Jump back to footnote 1 in the text&#34;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Research Threat Models</title>
   <link href="https://third-bit.com/2025/04/12/research-threat-models/"/>
   <updated>2025-04-12T00:00:00Z</updated>
   <id>https://third-bit.com/2025/04/12/research-threat-models/</id>
   <content type="html">&lt;p&gt;&lt;a href=&#34;https://www.burntfen.com/&#34;&gt;Richard Littauer&lt;/a&gt; and others are writing some guidance
for researchers who want their code to outlast their present job.
Their motivation is at least partly the unprecedented attacks on science by the Trump administration;
to help,
I&amp;rsquo;ve written the threat models shown below.
I&amp;rsquo;d be very grateful for &lt;a href=&#34;mailto:gvwilson@third-bit.com&#34;&gt;feedback&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When making plans, it&amp;rsquo;s useful to know what you&amp;rsquo;re planning &lt;em&gt;for&lt;/em&gt;.
Being explicit about &lt;strong&gt;threat models&lt;/strong&gt; helps you prioritize,
build consensus with colleagues,
and check whether you&amp;rsquo;ve forgotten something important.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Individual threats&lt;/strong&gt; are those that affect one or a few members of your team,
    such as a foreign student having their visa revoked without notice
    or needing to take extended medical leave.
    The most common way to prepare for this is to require everyone to document their work thoroughly,
    but that rarely works in practice:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The hours spent writing those descriptions are hours &lt;em&gt;not&lt;/em&gt; spent doing research,
    so people will always short the former to focus on the latter.&lt;/li&gt;
&lt;li&gt;People invariably fail to write down the &amp;ldquo;obvious&amp;rdquo; parts of their work
    that are anything but obvious to the next person.
In practice,
&amp;ldquo;automate what you can and create checklists for what you can&amp;rsquo;t&amp;rdquo; seems to be a better approach,
particularly if you check those checklists by having someone else try to use them
while their authors are still available to take notes and update them.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Leadership threats&lt;/strong&gt; are individual threats that affect the project&amp;rsquo;s leader,
    such as being targeted by elected officials for pointing out the holes in
    the pseudoscientific conspiracy theories they are parroting.
    One way to prepare is to have a designated successor
    (who can also stand in for you if you ever want to take a holiday);
    another is to talk with peers about who will inherit what if your project is shut down.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Institutional threats&lt;/strong&gt; are those that affect large groups at once,
    such as your university or professional association being blacklisted by government funding agencies.
    These scenarios are equivalents of major storms or forest fires
    in which so many people are affected at the same time that the rest of the community can&amp;rsquo;t absorb them.
    Regional and national governments handle disasters like these
    by having evacuation plans to get victims to safe(r) places,
    and corollary plans for putting beds in high school gyms and flying in food and emergency medical personnel
    to help people when they arrive.
    The equivalents in research are
    to lobby governments to change visa rules for scientific refugees
    and to set aside contingency funding to attract and support them.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;One important thing about these threat models is their timescales:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you start making a checklist for publishing your team&amp;rsquo;s datasets today,
    you will be able to test it out (and see its benefits) in a week or two.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want universities and regional or national governments to be ready to absorb and support
    an influx of smart, hard-working people
    despite the nationalist jingoism of populist politicians,
    you need to think in terms of many months.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally,
    if you want professional societies to take something vaguely resembling principled positions,
    look at how long it is taking them to adopt open access
    (which is much, much less contentious)
    and settle in for a years-long fight.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thinking about this stuff is scary,
in part because most researchers have no personal experience with community organizing or disaster preparedness.
Tessera Strategies are running a &lt;a href=&#34;https://tesserastrategies.org/projects/&#34;&gt;book club&lt;/a&gt; to help people learn about the former;
the application deadline for participation in the first round has passed,
but please keep an eye on &lt;a href=&#34;https://tesserastrategies.org/blog/&#34;&gt;their blog&lt;/a&gt; for future offerings.&lt;/p&gt;
&lt;p&gt;As for disaster preparedness,
almost everything you&amp;rsquo;ll find online starts from a place of individualized Hobbesian despair,
i.e.,
assumes that there&amp;rsquo;s nothing you can do to &lt;em&gt;prevent&lt;/em&gt; disaster
and that it will be you against the world if and when one strikes.
Professionals know that both assumptions are wrong:
there are &lt;a href=&#34;https://www.royalroads.ca/programs/master-arts-disaster-and-emergency-management&#34;&gt;entire graduate programs&lt;/a&gt; devoted to creating, analyzing, and executing plans for disasters,
and a great deal of research proving that most people work together for the greater good
when the worst finally happens.
Most of what I&amp;rsquo;m familiar with deals with natural disasters and their physical or economic aftermath;
again,
I&amp;rsquo;d &lt;a href=&#34;mailto:gvwilson@third-bit.com&#34;&gt;be grateful for pointers&lt;/a&gt; to prior art that focuses on recovery for research.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Congratulations to This Term&#39;s Students</title>
   <link href="https://third-bit.com/2025/04/09/congratulations-to-this-terms-students/"/>
   <updated>2025-04-09T00:00:00Z</updated>
   <id>https://third-bit.com/2025/04/09/congratulations-to-this-terms-students/</id>
   <content type="html">&lt;p&gt;I had the pleasure of working with two teams of undergraduates at the University of Toronto this semester.
They have now wrapped up their projects
and I think what they did was very cool.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/amy-kim8/&#34;&gt;Amy Kim&lt;/a&gt; and &lt;a href=&#34;https://www.linkedin.com/in/daelenia-susanto-69067b255/&#34;&gt;Daelenia Susanto&lt;/a&gt; built a tool called &lt;a href=&#34;https://github.com/gvwilson/browsercast&#34;&gt;Browsercast&lt;/a&gt;
that plays an HTML slideshow in sync with a voiceover.
They spent a lot of time wrestling with JavaScript APIs and browser idiosyncracies,
and a lot more thinking about who would use it and how;
their &lt;a href=&#34;https://www.youtube.com/watch?v=fvqkXGvw9bU&#34;&gt;demo video&lt;/a&gt; shows what it can do,
and we&amp;rsquo;re grateful to &lt;a href=&#34;https://www.linkedin.com/in/tony-burbage/&#34;&gt;Tony Burbage&lt;/a&gt; for guidance.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/david-barsamyan-213a75265/&#34;&gt;David Barsamyan&lt;/a&gt;,
&lt;a href=&#34;https://www.linkedin.com/in/lorena-buciu/&#34;&gt;Lorena Buciu&lt;/a&gt;,
&lt;a href=&#34;https://www.linkedin.com/in/eunchae-seong/&#34;&gt;Rachel Seong&lt;/a&gt;,
&lt;a href=&#34;https://www.linkedin.com/in/yifan-wang-01/&#34;&gt;Evence Wang&lt;/a&gt;,
and &lt;a href=&#34;https://www.linkedin.com/in/cassandra-tin-kwon-yuen-4a0011267/&#34;&gt;Cassandra Tin Kwon Yuen&lt;/a&gt;
built &lt;a href=&#34;https://github.com/gvwilson/mossball&#34;&gt;a set of plugins&lt;/a&gt; for &lt;a href=&#34;https://marimo.io/&#34;&gt;Marimo&lt;/a&gt;
that implement common types of classroom exercises
like find-the-word puzzles and multiple choice questions.
&lt;a href=&#34;https://www.youtube.com/watch?v=oeYEotXOvgA&#34;&gt;Their video&lt;/a&gt; shows each one in operation and explains their architecture;
we hope to have them available as a Python package just as soon as exams are over.&lt;/p&gt;
&lt;p&gt;This marks the first time I&amp;rsquo;ve supervised senior computer science projects in 15 years.
I think I had at least as much fun as they did,
and very proud of what they accomplished.
If you&amp;rsquo;re looking for talented junior programmers,
please reach out,
and if you&amp;rsquo;d like to contribute to the projects,
they&amp;rsquo;d be very happy to talk to you.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Tooling for Snailz</title>
   <link href="https://third-bit.com/2025/03/29/tooling-for-snailz/"/>
   <updated>2025-03-29T00:00:00Z</updated>
   <id>https://third-bit.com/2025/03/29/tooling-for-snailz/</id>
   <content type="html">&lt;p&gt;I built &lt;a href=&#34;https://github.com/gvwilson/snailz&#34;&gt;a synthetic data generator&lt;/a&gt; last year to use in a &amp;ldquo;software design for data scientists&amp;rdquo; tutorial
that I never finished writing.
Over the last week I rewrote it as a way of exploring some new tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The command-line interface to &lt;a href=&#34;https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview&#34;&gt;Claude&lt;/a&gt;.
    I&amp;rsquo;m disgusted by the amorality of the AI industry,
    but am now convinced that the coding tools are here to stay:
    writing tests and refactoring code with Claude&amp;rsquo;s help was &lt;em&gt;much&lt;/em&gt; faster than doing it by hand.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.astral.sh/uv/&#34;&gt;&lt;code&gt;uv&lt;/code&gt;&lt;/a&gt; for managing the packages and virtual environment and for running commands.
    It&amp;rsquo;s the first time I&amp;rsquo;ve used it as itself rather than running &lt;code&gt;uv pip whatever&lt;/code&gt;;
    never going back.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.astral.sh/ruff/&#34;&gt;&lt;code&gt;ruff&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://pypi.org/project/pyright/&#34;&gt;&lt;code&gt;pyright&lt;/code&gt;&lt;/a&gt; for checking the code.
    &lt;code&gt;ruff&lt;/code&gt; is a joy,
    but checking type annotations with &lt;code&gt;pyright&lt;/code&gt; cost me a couple of hours.
    It&amp;rsquo;s not the tool&amp;rsquo;s fault, though:
    figuring out how to annotate the last 5% of the code led to me writing my first &lt;a href=&#34;https://peps.python.org/pep-0544/&#34;&gt;protocol&lt;/a&gt;
    and then throwing up my hands and replacing it with &lt;code&gt;Any&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.pydantic.dev/&#34;&gt;&lt;code&gt;pydantic&lt;/code&gt;&lt;/a&gt; for storing and validating records,
    including the data that &lt;code&gt;snailz&lt;/code&gt; generates and the parameters used in generation.
    I started with &lt;a href=&#34;https://docs.python.org/3/library/dataclasses.html&#34;&gt;&lt;code&gt;dataclasses&lt;/code&gt;&lt;/a&gt;,
    but switched as soon as I found myself&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a class=&#34;footnote-ref&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; adding methods that &lt;code&gt;pydantic&lt;/code&gt; already had.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://pydoit.org/&#34;&gt;&lt;code&gt;doit&lt;/code&gt;&lt;/a&gt; to run commands instead of &lt;a href=&#34;https://www.gnu.org/software/make/&#34;&gt;Make&lt;/a&gt;.
    I&amp;rsquo;m more comfortable with the latter,
    but I recognize that writing Makefiles is a dying art.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mkdocs.org/&#34;&gt;&lt;code&gt;mkdocs&lt;/code&gt;&lt;/a&gt; for documentation instead of &lt;a href=&#34;https://www.sphinx-doc.org/&#34;&gt;Sphinx&lt;/a&gt; or &lt;a href=&#34;https://pdoc.dev/&#34;&gt;&lt;code&gt;pdoc&lt;/code&gt;&lt;/a&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a class=&#34;footnote-ref&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.
    I find &lt;code&gt;mkdocs&lt;/code&gt; easier to work with than Sphinx,
    and &lt;code&gt;pdoc&lt;/code&gt; doesn&amp;rsquo;t support &amp;ldquo;extra&amp;rdquo; Markdown pages as well as &lt;code&gt;mkdocs&lt;/code&gt;.
    (If the folks at &lt;a href=&#34;https://astral.sh/&#34;&gt;Astral&lt;/a&gt; are looking for new product ideas,
    a better documentation generator would have at least one paying customer the day it launched…)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.pytest.org/&#34;&gt;&lt;code&gt;pytest&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://pypi.org/project/pyfakefs/&#34;&gt;&lt;code&gt;pyfakefs&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://faker.readthedocs.io/&#34;&gt;&lt;code&gt;faker&lt;/code&gt;&lt;/a&gt; for testing
    and &lt;a href=&#34;https://click.palletsprojects.com/&#34;&gt;&lt;code&gt;click&lt;/code&gt;&lt;/a&gt; for building the command-line interface instead of &lt;a href=&#34;https://docs.python.org/3/library/argparse.html&#34;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnote&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Well, myself and Claude…&amp;#160;&lt;a class=&#34;footnote-backref&#34; href=&#34;#fnref:1&#34; title=&#34;Jump back to footnote 1 in the text&#34;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Please don&amp;rsquo;t ever use &lt;code&gt;pdoc3&lt;/code&gt;: someone who picks a swastika as a project logo and then argues that it&amp;rsquo;s just a cultural symbol doesn&amp;rsquo;t deserve your downloads.&amp;#160;&lt;a class=&#34;footnote-backref&#34; href=&#34;#fnref:2&#34; title=&#34;Jump back to footnote 2 in the text&#34;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>A Poem</title>
   <link href="https://third-bit.com/2025/03/15/poem/"/>
   <updated>2025-03-15T00:00:00Z</updated>
   <id>https://third-bit.com/2025/03/15/poem/</id>
   <content type="html">&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;I have scrolled
the doom
that was in
your browser

and which
you were probably
hoping
would pass you by

As expected
it was horrible
both sad
and yet dull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Resilience Advice</title>
   <link href="https://third-bit.com/2025/03/12/resilience-advice/"/>
   <updated>2025-03-12T00:00:00Z</updated>
   <id>https://third-bit.com/2025/03/12/resilience-advice/</id>
   <content type="html">&lt;p&gt;I wish we didn&amp;rsquo;t have to talk about this,
but given the Trump administration&amp;rsquo;s brutal assault on science
and its equally brutal bullying of scientists,
we need to start making plans.
What happens if they come for you, your research, and your data?
What happens if Nadella doesn&amp;rsquo;t kiss ass hard enough or fast enough
and Musk gets a judge to restrict access to GitHub?
(It wouldn&amp;rsquo;t be hard:
find a repository with some DEI-related content or copyrighted material and say,
&amp;ldquo;Turn it off until everything can be reviewed.&amp;rdquo;)&lt;/p&gt;
&lt;p&gt;I wish there were more training programs like &lt;a href=&#34;https://www.fordfoundation.org/work/learning/learning-reflections/keeping-those-on-the-front-lines-of-change-safe-five-years-of-the-ford-foundation-grantee-safety-program/&#34;&gt;this one&lt;/a&gt;.
Until there are,
here are my thoughts on what you can do:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Accept that the threat is both real and random.&lt;ul&gt;
&lt;li&gt;There&amp;rsquo;s a continuum of risk, but everyone scientist in the US is now a potential target.&lt;ul&gt;
&lt;li&gt;As with censorship, the turmoil is the point: hurt a few to frighten the rest into acquiescence.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;And the damage might spread:
    Canada&amp;rsquo;s previous Conservative prime minister &lt;a href=&#34;https://www.cbc.ca/news/health/second-opinion-scientists-muzzled-1.4588913&#34;&gt;muzzled scientists&lt;/a&gt;,
    and the current Conservative leader will undoubtedly go further if he wins the upcoming election.&lt;/li&gt;
&lt;li&gt;Remember, nobody at the Climate Research Unit thought they might be a target until &lt;a href=&#34;https://en.wikipedia.org/wiki/Climatic_Research_Unit_email_controversy&#34;&gt;Climategate&lt;/a&gt; happened.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Threat models (taken from &lt;a href=&#34;https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008563&#34;&gt;this paper&lt;/a&gt; with modifications):&lt;ul&gt;
&lt;li&gt;Casual threat (&amp;ldquo;drive by&amp;rdquo;): opportunistic but not determined (but see &amp;ldquo;institutional threat&amp;rdquo; below).&lt;/li&gt;
&lt;li&gt;Intimate threat: a life partner (not a big one for this conversation).&lt;/li&gt;
&lt;li&gt;Insider threat: &amp;ldquo;inside the fortress&amp;rdquo; (i.e., the departmental sys admin is a DOGE appointee or MAGA sympathizer).&lt;/li&gt;
&lt;li&gt;Institutional threat: the rules change and now you&amp;rsquo;re a target: this was loony tunes two months ago and is now our reality.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Recognize that getting people to adopt secure habits is as hard as getting people to practice safe sex was in the 1980s.&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Security theatre&amp;rdquo; on the part of institutions is a big part of the problem.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;We will send your performance review as a Word document&amp;rdquo; practically trains people to be unsafe.&lt;/li&gt;
&lt;li&gt;Programmers have made security needlessly painful.&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dl.acm.org/doi/10.5555/1251421.1251435&#34;&gt;&amp;ldquo;Why Johnny Can&amp;rsquo;t Encrypt&amp;rdquo;&lt;/a&gt; was published a quarter of a century ago and nothing has gotten easier.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Immediate actions (in order):&lt;ol&gt;
&lt;li&gt;Don&amp;rsquo;t open that attachment, install that software, or click on that link without checking.&lt;ul&gt;
&lt;li&gt;Or talk to the &amp;ldquo;journalist&amp;rdquo; who just cold-called you without verifying their credentials.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Put open licenses on everything you can, make sure colleagues have copies, and &lt;a href=&#34;https://sciop.net/datasets/&#34;&gt;copy their data and code&lt;/a&gt; return.&lt;ul&gt;
&lt;li&gt;This isn&amp;rsquo;t just about human threats: talk to anyone who lost work because of Hurricane Katrina.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use a password manager (I recommend &lt;a href=&#34;https://1password.com/&#34;&gt;1Password&lt;/a&gt;),
    two-factor authentication,
    and &lt;a href=&#34;https://signal.org/&#34;&gt;Signal&lt;/a&gt; (it&amp;rsquo;s the only trustworthy messaging app out there).&lt;/li&gt;
&lt;li&gt;Identify services you could migrate to,
    e.g., &lt;a href=&#34;https://www.sync.com/&#34;&gt;Sync&lt;/a&gt; (hosted in Canada) and &lt;a href=&#34;https://whereby.com/&#34;&gt;Whereby&lt;/a&gt; (in Norway) instead of Dropbox and Zoom (US).&lt;/li&gt;
&lt;li&gt;Ask (require) IT to make &amp;ldquo;what if&amp;rdquo; plans &lt;em&gt;and test them out&lt;/em&gt;.&lt;ul&gt;
&lt;li&gt;E.g., make nightly backups of your GitHub issues (which aren&amp;rsquo;t stored in the Git repositories),
your Slack conversations,
and everything in your Google Drive.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lobby your professional association to put policies and plans in place &lt;em&gt;and enforce them&lt;/em&gt;.&lt;ul&gt;
&lt;li&gt;The Royal Society&amp;rsquo;s decision not to expel Musk was as shortsighted as it was cowardly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And now a request:
if you are taking steps like these right now,
I would be very grateful if you could &lt;a href=&#34;mailto:gvwilson@third-bit.com&#34;&gt;share your experience&lt;/a&gt;
(or better yet, a checklist of what you&amp;rsquo;ve done that other people could do).
I&amp;rsquo;m not looking for &amp;ldquo;we could X&amp;rdquo;, &amp;ldquo;you should Y&amp;rdquo;, or &amp;ldquo;maybe it&amp;rsquo;s time to think about Z&amp;rdquo;,
but rather a list of what you&amp;rsquo;ve done and what you&amp;rsquo;re doing.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>What We Mean by Software Design</title>
   <link href="https://third-bit.com/2025/03/08/what-we-mean-by-software-design/"/>
   <updated>2025-03-08T00:00:00Z</updated>
   <id>https://third-bit.com/2025/03/08/what-we-mean-by-software-design/</id>
   <content type="html">&lt;p&gt;Suppose you are building a static site generator that turns a bunch of Markdown files into HTML pages.
The Markdown files include links to external sites;
to ensure these are consistent between pages,
you have decided to do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;All links to external sites are written as &lt;code&gt;[text][some_key]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The keys and their associated URLs are stored in a YAML file like this:
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;- key: first
  url: https://first.site
- key: second
  url: https://second.site
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The static site generator reads the YAML file and converts the content to a block of text
    like the one shown below,
    then appends that text to each Markdown file in memory before translating to HTML:
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[first]: https://first.site
[second]: https://second.site
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now comes the hard part.
Your static site generator includes a linting tool that checks for common mistakes,
such as improperly-nested headings or undefined bibliography references.
You want to check that every link reference corresponds to an entry in the YAML file
and that everyone entry in the YAML file is used at least once.
Your first attempt uses a regular expression to find patterns of the form &lt;code&gt;[some][url]&lt;/code&gt; in the Markdown,
then does the obvious two-sided check with the URLs.
However,
your Markdown files also include snippets of Python code;
these may contain chained subscripts like &lt;code&gt;grid[x][y]&lt;/code&gt;,
which cause your linter to produce spurious error reports.
What should you do?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Implement some sort of &amp;ldquo;known problem&amp;rdquo; list to suppress the spurious error messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use regular expressions to erase code chunks from your Markdown files before searching for link references.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wait until the Markdown has been converted to HTML,
    then walk the DOM tree and check all the text that isn&amp;rsquo;t in code chunks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Solution #1 requires users to do extra work (and re-work as their content changes),
so let&amp;rsquo;s set it aside.
It&amp;rsquo;s easier to implement a first version of Solution #2 than of Solution #3,
but Solution #2 turns out to be surprisingly tricky to get right:
Markdown allows for indented code blocks,
and inline code sections might be marked with &lt;code&gt;&amp;lt;code&amp;gt;…&amp;lt;/code&amp;gt;&lt;/code&gt; rather than with single backticks.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m sure there are other solutions,
some of which may be better than the ones I&amp;rsquo;ve outlined,
but the point of this post is that when I say &amp;ldquo;software design&amp;rdquo;,
what I mean is &amp;ldquo;answers to questions like these and the justifications behind them&amp;rdquo;.
I wish there were more worked examples that discussed the pros and cons of possible solutions—I feel like
I still have a lot to learn.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>There&#39;s Nothin&#39; to Know</title>
   <link href="https://third-bit.com/2025/02/17/theres-nothin-to-know/"/>
   <updated>2025-02-17T00:00:00Z</updated>
   <id>https://third-bit.com/2025/02/17/theres-nothin-to-know/</id>
   <content type="html">&lt;p&gt;There&amp;rsquo;s nothin&amp;rsquo; to know.
You have an idea, you write down what you wanna say.
Then you get somebody to add in the commas and shit where they belong,
if you aren&amp;rsquo;t positive yourself.
Maybe fix up the spelling where you have some tricky words…although
I&amp;rsquo;ve seen scripts where I know words weren&amp;rsquo;t spelled right and there was hardly any commas in it at all.
So I don&amp;rsquo;t think it&amp;rsquo;s too important.
Anyway, you come to the last page you write in &amp;lsquo;Fade out&amp;rsquo;
and that&amp;rsquo;s the end, you&amp;rsquo;re done.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bo Catlett, &lt;em&gt;Get Shorty&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Remote Jobs</title>
   <link href="https://third-bit.com/2025/02/16/remote-jobs/"/>
   <updated>2025-02-16T00:00:00Z</updated>
   <id>https://third-bit.com/2025/02/16/remote-jobs/</id>
   <content type="html">&lt;p&gt;I&amp;rsquo;m trying to help some undergrad students find jobs,
and I figured these links might be useful to other people as well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://4dayweek.io/&#34;&gt;4DayWeek&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://arc.dev/&#34;&gt;Arc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://careervault.io/&#34;&gt;CareerVault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://contra.com/home&#34;&gt;Contra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dailyremote.com/&#34;&gt;DailyRemote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flexa.careers/&#34;&gt;Flexa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.flexjobs.com/&#34;&gt;FlexJobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://himalayas.app/&#34;&gt;Himalayas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hubstafftalent.net/&#34;&gt;HubStaff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jobspresso.co/&#34;&gt;Jobspresso&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://justremote.co/&#34;&gt;JustRemote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://remote.com/&#34;&gt;Remote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://remoteok.com/&#34;&gt;RemoteOK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://remotive.com/&#34;&gt;Remotive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.skipthedrive.com/&#34;&gt;SkipTheDrive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wellfound.com/&#34;&gt;WellFound&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://weworkremotely.com/&#34;&gt;WeWorkRemotely&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Human Connection</title>
   <link href="https://third-bit.com/2025/01/26/human-connection/"/>
   <updated>2025-01-26T00:00:00Z</updated>
   <id>https://third-bit.com/2025/01/26/human-connection/</id>
   <content type="html">&lt;p&gt;I was an enthusiastic proponent of MOOCs (self-paced online video courses) when they first appeared.
Like many people,
I believed that recording the best teachers in the world
and putting those recordings online with auto-graded exercises
would democratize education on a global scale.
I eventually realized that I was guilty of a category error:
the real divide in teaching and learning isn&amp;rsquo;t in-person versus online,
but interactive versus directive.
If you and I are riffing off each other&amp;rsquo;s ideas in real time,
it doesn&amp;rsquo;t matter (much) if we&amp;rsquo;re sitting side by side or on a video call:
we have a human connection that isn&amp;rsquo;t present if you record a video for me to watch
or write a book for me to read.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been thinking about this as I&amp;rsquo;ve been doing reviews on &lt;a href=&#34;https://www.scribophile.com/&#34;&gt;Scribophile&lt;/a&gt;,
teaching myself &lt;a href=&#34;https://gleam.run/&#34;&gt;Gleam&lt;/a&gt; on &lt;a href=&#34;https://exercism.org/&#34;&gt;Exercism&lt;/a&gt;,
supervising some &lt;a href=&#34;https://third-bit.com/projects/&#34;&gt;undergraduate students&lt;/a&gt; at the University of Toronto,
and trying to figure out how I feel about AI coding tools:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;Doing reviews&amp;rdquo; means commenting other people&amp;rsquo;s work as well as posting my own fiction,
    because doing the former is the only way to earn the points needed to do the latter.
    It&amp;rsquo;s a simple, transparent, and remarkably effective mechanism.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I&amp;rsquo;m not actually &amp;ldquo;teaching myself&amp;rdquo; on Exercism.
    Instead,
    I&amp;rsquo;m being taught indirectly by the people who have contributed exercises for me to do
    and by those other learners who have posted their solutions for me to compare mine against.
    I don&amp;rsquo;t have to post mine or take part in communal code reviews in the way that I do on Scribophile,
    but I learn a lot faster (and enjoy learning more) if I do so.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All the students I&amp;rsquo;m working with use AI tools
    as frequently and un-self-consciously as the students I had 15 years ago used Stack Overflow.
    One of them said it&amp;rsquo;s like pair programming with someone who knows a lot but thinks he knows everything;
    another student I spoke to at &lt;a href=&#34;https://2025.cusec.net/&#34;&gt;CUSEC&lt;/a&gt; a couple of weeks ago said that
    she mostly uses AI for &amp;ldquo;why not?&amp;rdquo; questions,
    as in,
    &amp;ldquo;Why doesn&amp;rsquo;t this piece of code work?&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I&amp;rsquo;m really intrigued by &lt;a href=&#34;https://getunblocked.com/&#34;&gt;Unblocked&lt;/a&gt;,
    which uses LLM technology to answer questions about legacy code bases.
    Why do we have to test these three conditions in this precise order?
    Why do we have to repeat this configuration value in two places?
    Unblocked can answer these questions as well as
    someone who worked on the code two years ago and hasn&amp;rsquo;t touched it since,
    but only if it&amp;rsquo;s fed the whole conversation:
    code review comments, chat, docs, and everything else.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;What ties all these together in my mind (this morning at least) is that &amp;ldquo;interactive vs. directive&amp;rdquo; continuum.
Are LLMs just (or &amp;ldquo;just&amp;rdquo;) a way to interact with other people indirectly?
When I ask an LLM a question,
its answer is a statistical amalgam of answers that people I&amp;rsquo;ve never met might have given;
should I put that in the same mental bucket as viewing other people&amp;rsquo;s exericse solutions on Exercism,
reading other people&amp;rsquo;s answers to questions on Stack Overflow,
or looking through old chat logs and code review comments?
It certainly feels more like that to me than watching a video or reading a blog post like this one.&lt;/p&gt;
&lt;p&gt;I realize that LLMs only provide the illusion of a human connection,
but does that have to be the case?
Can an LLM be an extra voice when &lt;a href=&#34;https://youtu.be/2LbuoxAy56o&#34;&gt;a group of students debate each other&lt;/a&gt;
rather than a substitute for person-to-person interaction?
Can the AI in my IDE tell me who on the team I should talk to
rather than trying to be spicy auto-complete?
I think that investigating those questions will help us avoid making
the same kind of category error I made all those years ago.&lt;/p&gt;</content>
 </entry>
 
</feed>