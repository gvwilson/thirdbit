<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>The Third Bit</title>
 <link href="https://third-bit.com/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2025-10-18T00:00:00Z</updated>
 <id>https://third-bit.com/</id>
 <author>
   <name>Greg Wilson</name>
   <email>gvwilson@third-bit.com</email>
 </author>
 
 <entry>
   <title>One Small Command</title>
   <link href="https://third-bit.com/2025/10/18/one-small-command/"/>
   <updated>2025-10-18T00:00:00Z</updated>
   <id>https://third-bit.com/2025/10/18/one-small-command/</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;Please note that I am suffering from jet lag and recovering from a bad cold while writing this,
which means my proposal may well be garbage.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&amp;rsquo;ve had a lot of conversations over the years about
the differences in how software engineers and data scientists work.
One example is how they manage software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Software engineers regard duplicated code as sinful and refactor to avoid it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data scientists routinely copy a notebook or a script and make small changes to do a new data analysis.
    After many years,
    I have accepted that they are right to do so:
    their analyses are often exploratory one-offs,
    so copy-and-modify is more efficient than generalize-and-parameterize.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The problem is that software engineers build tools for software engineers,
which means they don&amp;rsquo;t automatically support data scientists&amp;rsquo; workflows.
Continuing the refactor-versus-copy example,
Git doesn&amp;rsquo;t have a way to explicitly say &amp;ldquo;this file started as a copy of that one&amp;rdquo;.
Git has a way to say &amp;ldquo;this file was moved or renamed&amp;rdquo; (&lt;code&gt;git mv&lt;/code&gt;),
but there isn&amp;rsquo;t a corresponding &lt;code&gt;git cp&lt;/code&gt; command
because software engineers believe that you shouldn&amp;rsquo;t be doing that.
You can ask Git to guess which files were copied in each commit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git log --find-copies --diff-filter=C --stat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;but (a) you probably didn&amp;rsquo;t know this existed,
(b) you&amp;rsquo;re not going to remember it,
and (c) Git&amp;rsquo;s heuristics often produce incorrect answers.&lt;/p&gt;
&lt;p&gt;So let&amp;rsquo;s add &lt;code&gt;git cp&lt;/code&gt; so that the log records copying events explicitly.
That will allow us to trace the lineage of copied-and-modified notebooks and scripts
(and the copied-and-modified configuration files that software engineers create
because they don&amp;rsquo;t think of YAML and TOML as code).
Doing this won&amp;rsquo;t solve all our traceability problems,
but I think it will solve some of them,
and we&amp;rsquo;ll learn something useful from its failure if it doesn&amp;rsquo;t.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Labwork to Leadership</title>
   <link href="https://third-bit.com/2025/10/08/labwork-to-leadership/"/>
   <updated>2025-10-08T00:00:00Z</updated>
   <id>https://third-bit.com/2025/10/08/labwork-to-leadership/</id>
   <content type="html">&lt;p&gt;Jen Heemstra&amp;rsquo;s
&lt;a href=&#34;https://isbnsearch.org/isbn/9780674258631&#34;&gt;&lt;em&gt;Labwork to Leadership: A Concise Guide to Thriving in the Science Job You Werenâ€™t Trained For&lt;/em&gt;&lt;/a&gt;
is the book I&amp;rsquo;ve been hoping to find for years.
It includes sections on managing yourself, managing others, and coaching future leaders,
all grounded in first-hand experience and empirical research.
I wish it included more on &lt;a href=&#34;https://gvwilson.github.io/change/&#34;&gt;organizational change&lt;/a&gt;
and &lt;a href=&#34;https://third-bit.com/2025/09/12/searching-for-closure/&#34;&gt;winding projects down&lt;/a&gt;,
but those are &lt;em&gt;my&lt;/em&gt; preoccupations:
as is,
it would be a great foundation for a Carpentries-style workshop,
and I hope someone creates that.&lt;/p&gt;
&lt;div class=&#34;center&#34;&gt;
  &lt;img src=&#34;https://third-bit.com/files/books/heemstra-leadership.jpg&#34; alt=&#34;cover of Heemstra&#39;s &#39;Labwork to Leadership&#39;&#34;&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Story Dice</title>
   <link href="https://third-bit.com/2025/10/07/story-dice/"/>
   <updated>2025-10-07T00:00:00Z</updated>
   <id>https://third-bit.com/2025/10/07/story-dice/</id>
   <content type="html">&lt;p&gt;My daughter gave me a set of story dice for Christmas a couple of years ago.
One of them has gone missing,
which makes me wonder if there are now stories I&amp;rsquo;m no longer able to tell.&lt;/p&gt;
&lt;div class=&#34;center&#34;&gt;
  &lt;img src=&#34;https://third-bit.com/files/2025/story-dice.jpg&#34; alt=&#34;three red and two green story dice&#34; width=&#34;50%&#34;&gt;
&lt;/div&gt;

&lt;p&gt;Time to make another cup of tea. If you came in peace, be welcome.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Loading the Dishwasher</title>
   <link href="https://third-bit.com/2025/10/05/loading-the-dishwasher/"/>
   <updated>2025-10-05T00:00:00Z</updated>
   <id>https://third-bit.com/2025/10/05/loading-the-dishwasher/</id>
   <content type="html">&lt;p&gt;My daughter was profligate in her use of kitchenware:
she would always grab a fresh glass for water instead of re-using the one that she had just emptied,
and never used three saucepans to cook when she could use five.
Now that she has left home,
I only need to load the dishwasher once a day.&lt;/p&gt;
&lt;p&gt;But I wish I still had to load it twice.&lt;/p&gt;
&lt;p&gt;Time to make another cup of tea. If you came in peace, be welcome.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Time Spent on Hardening</title>
   <link href="https://third-bit.com/2025/09/18/time-spent-on-hardening/"/>
   <updated>2025-09-18T00:00:00Z</updated>
   <id>https://third-bit.com/2025/09/18/time-spent-on-hardening/</id>
   <content type="html">&lt;p&gt;I recently received mail from someone working on a software-based approach to fault tolerance.
Their tool makes applications more reliable,
but they think it also makes developers more productive
by reducing the amount of error detection and handling code they need write.&lt;/p&gt;
&lt;p&gt;They have never been able to find research
that quantifies how much time developers spend on code for detecting and handling problems
relative to the effort for the &amp;ldquo;happy path&amp;rdquo;.
they know it&amp;rsquo;s substantial,
and is (probably) increasing as applications become more distributed,
but the only number they&amp;rsquo;ve found is from a 1995 book called
&lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780471950684&#34;&gt;Software Fault Tolerance&lt;/a&gt;&lt;/em&gt;,
where Dr. Flaviu Cristian says that it often accounts for more than two-thirds of code in production systems.&lt;/p&gt;
&lt;p&gt;So I asked a dozen researchers I met through &lt;a href=&#34;https://neverworkintheory.org&#34;&gt;It Will Never Work in Theory&lt;/a&gt;
if they knew of anything,
and the answer was, &amp;ldquo;No, there isn&amp;rsquo;t anything that specifically addresses that question.&amp;rdquo;
This strikes me as odd,
because it wouldn&amp;rsquo;t be hard to measure
and the answer would be interesting.&lt;/p&gt;
&lt;p&gt;People do throw around questionable numbers about the cost of bugs and bug fixing,
e.g., claim that companies &lt;a href=&#34;https://www.it-cisq.org/cisq-files/pdf/CPSQ-2020-report.pdf&#34;&gt;$2 trillion in 2020&lt;/a&gt;.
Here are some other related resources my contacts were able to give me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dl.acm.org/doi/10.1145/3448977&#34;&gt;A Systematic Review on Software Robustness Assessment&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://conf.researchr.org/details/ast-2025/ast-2025-papers/9/Exceptional-Behaviors-How-Frequently-Are-They-Tested-&#34;&gt;Exceptional Behaviors: How Frequently Are They Tested?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dl.acm.org/doi/10.1109/ICSE-SEIP.2019.00012&#34;&gt;Automating Chaos Experiments in Production&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sciencedirect.com/science/article/abs/pii/S0164121218300724&#34;&gt;The Exception Handling Riddle: An Empirical Study on the Android API&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ctreude.ca/wp-content/uploads/2019/01/saner19.pdf&#34;&gt;Unveiling Exception Handling Guidelines Adopted by Java Developers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/document/8666786&#34;&gt;Today Was a Good Day: The Daily Life of Software Developers&lt;/a&gt;:
    Developers spend about 11% of their time on debugging and bugfixing
    with some days being dedicated to the task (up to 32%)
    and some days being dedicated to meetings and collaboration (4-6%).
    You can also add time spent on testing (up to 16%).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/document/7829407&#34;&gt;The Work Life of Developers: Activities, Switches and Perceived Productivity&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/document/7181430&#34;&gt;I Know What You Did Last Summer - An Investigation of How Developers Spend Their Time&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/1901.08718&#34;&gt;Unveiling Exception Handling Guidelines Adopted by Java Developers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://journal-bcs.springeropen.com/articles/10.1186/s13173-019-0095-5&#34;&gt;Studying the Evolution of Exception Handling Anti-Patterns in a Long-Lived Large-Scale Project&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://plg.uwaterloo.ca/~migod/papers/2019/scam19.pdf&#34;&gt;A Study on the Effects of Exception Usage in Open-Source C++ Systems&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2007.10912&#34;&gt;The Corrective Commit Probability Code Quality Metric&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/document/6681382&#34;&gt;Debugging Revisited: Toward Understanding the Debugging Needs of Contemporary Software Developers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dl.acm.org/doi/abs/10.1145/355045.355046&#34;&gt;Designing robust Java programs with exceptions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://marybethkery.com/projects/ErrorHandling/kistner_vlhcc17.pdf&#34;&gt;Moonstone: Support for Understanding and Writing Exception Handling Code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/document/5383375&#34;&gt;Understanding Exception Handling: Viewpoints of Novices and Experts&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dl.acm.org/doi/10.1145/3196398.3196435&#34;&gt;Studying the Relationship Between Exception Handling Practices and Post-Release Defects&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/research/wp-content/uploads/2016/07/ICSE-2014-SEIP-Where-Do-Developers-Log-An-Empirical-Study-on-Logging-Practices-in-Industry.pdf&#34;&gt;Where Do Developers Log?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/abstract/document/9179007&#34;&gt;What Leads to a Confirmatory or Disconfirmatory Behavior of Software Testers?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again,
the fact that we don&amp;rsquo;t have reliable figures for this strikes me as odd.
As one of them pointed out,
while everyone is throwing LLMs at often artificial and academic problems
and then claiming to have improved some arbitrary metric X% over a random baseline,
we still don&amp;rsquo;t know fairly basic things about software development.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;My thanks to everyone who responded to my late-night email about this.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Later:&lt;/strong&gt;
this post made the #8 spot on Hacker News.
It must have been a slow dayâ€¦&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;@/files/2025/hacker-news-hardening.png&#34;&gt;&lt;img src=&#34;@/files/2025/hacker-news-hardening.png&#34; alt=&#34;Hacker News&#34; width=&#34;400px&#34;&gt;&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Searching for Closure</title>
   <link href="https://third-bit.com/2025/09/12/searching-for-closure/"/>
   <updated>2025-09-12T00:00:00Z</updated>
   <id>https://third-bit.com/2025/09/12/searching-for-closure/</id>
   <content type="html">&lt;p&gt;For every beginning there must be an ending,
but we don&amp;rsquo;t like to talk about that,
particularly not in the tech industry.
There are thousands of books in print about how to start a business,
but only a handful about how to pass one on,
and many of those are really about how to sell out at the right time.&lt;/p&gt;
&lt;p&gt;I have experienced a lot of endings,
and the most important thing I&amp;rsquo;ve learned is that
they can be dignified and fulfilling if done well.
I also think that preparing for the end can make it less likely,
and make what happens before it more enjoyable.
However,
a lot of people aren&amp;rsquo;t being given the chance
to wind things down gracefully.
Between the Trump administration&amp;rsquo;s attack on science
and the cuts big tech companies are making in the name of AI,
thousands of people are being given days (or less) to end years of work.&lt;/p&gt;
&lt;p&gt;I am therefore assembling material for a half-day workshop on project closure.
If you or someone you know has ended a software project or scientific research project,
I&amp;rsquo;d be very grateful if you could spare half an hour for an online interview:
you can reach me by email at &lt;a href=&#34;mailto:gvwilson@third-bit.com&#34;&gt;gvwilson@third-bit.com&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: all discussion will be confidential,
and everyone interviewed will be able to review and veto anything that mentions them
before it is seen by anyone else.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Learner Personas&lt;/h2&gt;
&lt;p&gt;There are important differences between &lt;em&gt;deliberate closure&lt;/em&gt;
(shutting a project down of your own accord and on your own timeline),
and &lt;em&gt;abrupt closure&lt;/em&gt;
(shutting it down on short notice under difficult circumstances).
This workshop therefore caters to two learner personas.&lt;/p&gt;
&lt;h3&gt;Vaida&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Vaida, 33, has a PhD in oceanography
    and now works as a data analyst for the Ministry of the Environment.&lt;/li&gt;
&lt;li&gt;She has been collecting and publishing beach erosion data for the past six years.
    She also co-founded a volunteer group that teaches environmental science to high school students,
    and has been its leader for the past five years.&lt;/li&gt;
&lt;li&gt;Vaida is relocating to pursue a new career opportunity,
    so she wants to wind down her data collection project.
    She also wants the volunteer group to continue its work,
    but the only documentation of how it operates is
    one slide deck and a couple of out-of-date blog posts.&lt;/li&gt;
&lt;li&gt;Vaida is working hard to prepare for her new job,
    which means only has two or three hours a week for the next couple of months
    to put into tidying things up.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Liam&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Liam, 41, worked as a civil engineer for almost a decade
    before becoming a full-time software developer
    at a company that does contract work
    modeling slope stability for large construction projects.&lt;/li&gt;
&lt;li&gt;While Liam writes lots of tests and uses Git and GitHub to share work with his colleagues,
    very little of what he knows about OpenStabil
    (the company&amp;rsquo;s open source software package)
    has ever been written down.&lt;/li&gt;
&lt;li&gt;Liam&amp;rsquo;s group was acquired by another engineering firm sixteen months ago.
    After an abrupt change of leadership,
    the company has decided to merge parts of OpenStabil into a closed-source tool suite
    and to stop all further development of the open version.
    Liam has been told to make these changes immediately;
    after protest,
    he has been given until the end of the week.&lt;/li&gt;
&lt;li&gt;Liam is deeply invested in the small but tight-knit OpenStabil community,
    but has a young family at home
    and doesn&amp;rsquo;t dare risk being unemployed.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Mastodon and Webbly</title>
   <link href="https://third-bit.com/2025/09/05/mastodon-and-webbly/"/>
   <updated>2025-09-05T00:00:00Z</updated>
   <id>https://third-bit.com/2025/09/05/mastodon-and-webbly/</id>
   <content type="html">&lt;p&gt;I was going to title this post &amp;ldquo;Two Great Tastes That Taste Great Together&amp;rdquo;,
but I expect most of my readers are too young to get the reference,
so I&amp;rsquo;ll just dive right in:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Glitch gave literally millions of people a chance to build something on the web
    without having to wrestle with NPM or webpack
    or set up a server
    or deal with any of the other crap that Sumana Harihareswara has dubbed
    &lt;a href=&#34;https://www.harihareswara.net/posts/2016/inessential-weirdnesses-in-open-source-software-oscon-2016/&#34;&gt;inessential weirdness&lt;/a&gt;.
    It was beautiful and useful,
    but it wasn&amp;rsquo;t profitable enough for Fastly to keep it alive.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;But the idea of a low-overhead in-the-browser way for the 99% to build things
    didn&amp;rsquo;t start with Glitch
    and hasn&amp;rsquo;t died with it either.
    Projects like &lt;a href=&#34;https://make.webblythings.com/&#34;&gt;Webbly&lt;/a&gt; (source &lt;a href=&#34;https://github.com/pomax/make-webbly-things&#34;&gt;here&lt;/a&gt;)
    are still trying to let people use the web to build the web.
    However,
    someone has to host these things somewhere:
    who&amp;rsquo;s going to do that, and where?
    More specifically,
    can we construct a hosting solution that isn&amp;rsquo;t tied to a particular company
    and therefore doesn&amp;rsquo;t have a singular point of failure?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Well,
    what about &lt;a href=&#34;https://en.wikipedia.org/wiki/Mastodon_(social_network)&#34;&gt;Mastodon&lt;/a&gt;?
    Its authors and users are deeply committed to decentralization and federation,
    and more people are running servers for particular communities every day.
    What if (wait, hear me out)
    what if Webbly was bundled with Mastodon
    so that Mastodon site admins could provide an in-the-browser page-building experience to their users
    simply by saying &amp;ldquo;yes&amp;rdquo; to one configuration option?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Why would they do that?
    My answer is,
    &amp;ldquo;Take a look at Mastodon&amp;rsquo;s default browser interface.&amp;rdquo;
    It lets you add a couple of pictures and a few links to your profile,
    but that&amp;rsquo;s less than &lt;a href=&#34;https://en.wikipedia.org/wiki/Myspace&#34;&gt;MySpace&lt;/a&gt; offered twenty years ago.
    I am 100% certain that if Mastodon came with an easy in-browser page builder,
    people would use it to create all sorts of wonderful things.
    (Awful ones too, of course, but Mastodon site admins already have to grapple with content admin.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Greenspun%27s_tenth_rule&#34;&gt;Greenspun&amp;rsquo;s Tenth Rule&lt;/a&gt; is that every sufficiently complicated program
contains a mediocre implementation of Lisp.
Equally,
I think every useful web-based tool is trying to be
what Visual Basic was in the 1990s
and WordPress was to the early web:
useful, right there, and a gradual ramp for new users rather than a cliff to climb.
I think the sort of people who built useful little things with Glitch
would do amazing things with Webbly
if it was married to their social media.
I also think that allowing people to create custom home pages
or tweak their feeds
would draw a lot of new users away from fragile, centralized systems like X and Bluesky.
I know that I&amp;rsquo;ve been wrong far more often than I&amp;rsquo;ve been right,
but this really does feel promising.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>If I Retired</title>
   <link href="https://third-bit.com/2025/09/04/if-i-retired/"/>
   <updated>2025-09-04T00:00:00Z</updated>
   <id>https://third-bit.com/2025/09/04/if-i-retired/</id>
   <content type="html">&lt;p&gt;If I retired tomorrow,
here&amp;rsquo;s how I would would to spend each week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Writing &lt;a href=&#34;https://third-bit.com/fiction/&#34;&gt;fiction&lt;/a&gt;.
    I&amp;rsquo;m making slow but steady progress on a couple of middle-grade books
    and need another 30,000 words to finish off a YA novel I&amp;rsquo;ve been working on for several years.
    I started writing them for my daughter when she was young;
    she&amp;rsquo;s now in university,
    and unlikely to find them as engaging as she once would have,
    but I&amp;rsquo;d still like to finish them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Helping to assemble a new kind of undergraduate software engineering course
    in which learners explore what it means for programmers to be productive
    and how we can make it &lt;a href=&#34;https://third-bit.com/ideas/se-change/#observe&#34;&gt;observable&lt;/a&gt;.
    I think this would be a good way to introduce young programmers to
    the difference between reliable research and plausible punditry,
    but I wouldn&amp;rsquo;t want to tackle it on my own:
    I don&amp;rsquo;t (yet) know enough about productivity and observability in software development,
    and too many of the projects that seemed like good ideas to me at the time
    have turned out to have &lt;a href=&#34;https://third-bit.com/2021/07/22/whatever-happened-to-tidyblocks/&#34;&gt;fatal flaws&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teaching.
    I&amp;rsquo;m about to teach &lt;a href=&#34;https://gvwilson.github.io/change/&#34;&gt;a workshop on organizational change&lt;/a&gt;,
    and helping with &lt;a href=&#34;https://arxiv.org/abs/2505.06484&#34;&gt;this paper&lt;/a&gt; has convinced me that
    one on how to end projects gracefully would be useful too.
    Really,
    though,
    I just want to get back in the classroom:
    for better or worse,
    AI Is the biggest change in teaching and learning in my adult lifetime,
    and I want to be in the thick of it rather than opining from the sidelines.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Doing housework,
    playing the sax,
    and riding my bike or swimming (depending on the season and the state of my knees).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What I would want most,
though,
is a circle of friends to do these things with.
I love my wife very much,
but I&amp;rsquo;m never going to enjoy gardening or cooking as much as she does,
and boardgames like &lt;a href=&#34;https://boardgamegeek.com/boardgame/2655/hive&#34;&gt;Hive&lt;/a&gt;
and &lt;a href=&#34;https://boardgamegeek.com/boardgame/194655/santorini&#34;&gt;Santorini&lt;/a&gt; aren&amp;rsquo;t ever going to be her thing.
I always thought &lt;a href=&#34;https://third-bit.com/2018/03/20/goodbye-jeff/&#34;&gt;my younger brother&lt;/a&gt; and I
would wind up playing chess in the park in our twilight years;
as the nights grow longer and the leaves begin to turn,
I&amp;rsquo;d like to have other people to do that with.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Things I&#39;m Looking For</title>
   <link href="https://third-bit.com/2025/08/21/things-im-looking-for/"/>
   <updated>2025-08-21T00:00:00Z</updated>
   <id>https://third-bit.com/2025/08/21/things-im-looking-for/</id>
   <content type="html">&lt;p&gt;Following up on &lt;a href=&#34;https://third-bit.com/2025/08/15/productivity-workshop-ideas/&#34;&gt;my recent plea&lt;/a&gt;
for material to use in a workshop on productivity for software engineers,
I&amp;rsquo;d also be grateful for material on:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;How to hand off or wind down a research project or open source software project.&lt;/dt&gt;
&lt;dd&gt;For every beginning there must be an ending, but we don&amp;rsquo;t like to talk about them.
For example, there are thousands of books in print about how to start a business,
but only a handful about how to pass one on or wind one down,
and many of those are really about how to sell out at the right time.
I think the reason is that mortality scares us,
but preparing for the end can make the end less likely,
and can help make what happens before then more enjoyable.
If you have ever shut something down or handed it over after several years,
please &lt;a href=&#34;mailto:gvwilson@third-bit.com&#34;&gt;get in touch&lt;/a&gt;.&lt;/dd&gt;
&lt;dt&gt;A legal and business comparison of the new generation of software licenses.&lt;/dt&gt;
&lt;dd&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Business_Source_License&#34;&gt;Business Source License&lt;/a&gt;
has attracted a lot of fire from open source zealots;
the &lt;a href=&#34;https://www.unrealengine.com/en-US/license&#34;&gt;Unreal Engine license&lt;/a&gt;
also puts restrictions on use,
but hasn&amp;rsquo;t caused nearly as much yelling.
If anyone has written a level-headed compare-and-contrast of licenses
that the &lt;a href=&#34;https://opensource.org/&#34;&gt;Open Source Initiative&lt;/a&gt; &lt;em&gt;hasn&amp;rsquo;t&lt;/em&gt; blessed,
but which give users more rights than a standard closed-source license,
I&amp;rsquo;d be very grateful for a pointerâ€”again,
please &lt;a href=&#34;mailto:gvwilson@third-bit.com&#34;&gt;get in touch&lt;/a&gt;.&lt;/dd&gt;
&lt;/dl&gt;</content>
 </entry>
 
 <entry>
   <title>Productivity Workshop Ideas</title>
   <link href="https://third-bit.com/2025/08/15/productivity-workshop-ideas/"/>
   <updated>2025-08-15T00:00:00Z</updated>
   <id>https://third-bit.com/2025/08/15/productivity-workshop-ideas/</id>
   <content type="html">&lt;p&gt;Suppose you were going to build a one-day hands-on tutorial for software engineers
on what &amp;ldquo;productivity&amp;rdquo; means and how to observe it
(which might or might not include measuring it quantitatively).
You have 6x30 minutes to talk and 4x45 minutes for practical exercises.
(Yes, that&amp;rsquo;s only six hours, but you need to leave time for questions, coffee breaks, lunch, etc.)
If each of those six slots is built around one particular research paper,
what are the papers?
And what are the four exercises?&lt;/p&gt;
&lt;p&gt;Please:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Peer-reviewed research papers please, not opinion pieces from industry pundits.&lt;/li&gt;
&lt;li&gt;Papers, not books (but I&amp;rsquo;ll accept chapters from books as &amp;ldquo;papers&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;Tools and data used in the exercises has to be openly accessible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have suggestions, please [email me][email], and thank you in advance.
If there are enough useful comments, I&amp;rsquo;ll organize an online discussion of this.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why productivity?
Because it affords a good mix of &amp;ldquo;how do we collect and analyze data?&amp;rdquo;,
&amp;ldquo;when are quantitative and qualitative analysis the right tools?&amp;rdquo;,
and &amp;ldquo;how do we operationalize a question like this?&amp;rdquo;
It&amp;rsquo;s also very topicalâ€”most discussions of the impact of AI are vacuous
because we&amp;rsquo;re arguing about performance improvements without first defining
performanceâ€”and there&amp;rsquo;s a lot of research out there to draw on.
I also hope it will draw interest from both the research community
and research-friendly practitioners.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Update&lt;/h2&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;span id=&#34;Beller2021&#34;&gt;Beller et al 2021&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;Moritz Beller, Vince Orgovan, Spencer Buja, and Thomas Zimmermann:
&amp;ldquo;Mind the Gap: On the Relationship Between Automatically Measured and Self-Reported Productivity&amp;rdquo;
&lt;em&gt;IEEE Software&lt;/em&gt;,
38(5),
2021,
10.1109/MS.2020.3048200.&lt;/dd&gt;
&lt;dt&gt;&lt;span id=&#34;Czerwinski2003&#34;&gt;Czerwinski et al 2003&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;Mary Czerwinski, Greg Smith, Tim Regan, Brian Meyers, George G. Robertson, and Gary K. Starkweather:
&amp;ldquo;Toward Characterizing the Productivity Benefits of Very Large Displays&amp;rdquo;
&lt;em&gt;Interact&lt;/em&gt;,
3,
2003.&lt;/dd&gt;
&lt;dt&gt;&lt;span id=&#34;Forsgren2021&#34;&gt;Forsgren et al 2021&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;Nicole Forsgren, Margaret-Anne Storey, Chandra Maddila, Tom Zimmermann, Brian Houck, and Jenna Butler:
&amp;ldquo;The SPACE of Developer Productivity: There&amp;rsquo;s More to It Than You Think&amp;rdquo;.
&lt;em&gt;ACM Queue&lt;/em&gt;,
19(1),
2021,
10.1145/3454122.3454124.&lt;/dd&gt;
&lt;dt&gt;&lt;span id=&#34;Hicks2024&#34;&gt;Hicks et al 2024&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;Catherine M. Hicks, Carol S. Lee, and Morgan Ramsey:
&amp;ldquo;Developer Thriving: Four Sociocognitive Factors That Create Resilient Productivity on Software Teams&amp;rdquo;
&lt;em&gt;IEEE Software&lt;/em&gt;,
41(4),
2024,
10.1109/MS.2024.3382957.&lt;/dd&gt;
&lt;dt&gt;&lt;span id=&#34;Meyer2014&#34;&gt;Meyer et al 2014&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;AndrÃ© N. Meyer, Thomas Fritz, Gail C. Murphy, and Thomas Zimmermann:
&amp;ldquo;Software Developers&amp;rsquo; Perceptions of Productivity&amp;rdquo;
&lt;em&gt;FSE&amp;lsquo;14&lt;/em&gt;,
2014,
10.1145/2635868.2635892.&lt;/dd&gt;
&lt;dt&gt;&lt;span id=&#34;MurphyHill2021&#34;&gt;Murphy-Hill et al 2021&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;Emerson Murphy-Hill, Ciera Jaspan, Caitlin Sadowski, David Shepherd, Michael Phillips, Collin Winter, Andrea Knight, Edward Smith and Matthew Jorde:
&amp;ldquo;What Predicts Software Developers&amp;rsquo; Productivity?&amp;rdquo;
&lt;em&gt;IEEE Trans. Software Engineering&lt;/em&gt;,
47(3),
10.1109/TSE.2019.2900308.&lt;/dd&gt;
&lt;dt&gt;&lt;span id=&#34;Noda2023&#34;&gt;Noda 2023&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;Abi Noda, Margaret-Anne Storey, Nicole Forsgren, and Michaela Greiler:
&amp;ldquo;DevEx: What Actually Drives Productivity&amp;rdquo;
&lt;em&gt;ACM Queue&lt;/em&gt;,
21(4),
2023,
10.1145/3595878.&lt;/dd&gt;
&lt;dt&gt;&lt;span id=&#34;Prechelt2019&#34;&gt;Prechelt 2019&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;Lutz Prechelt:
&amp;ldquo;The Mythical 10x Programmer&amp;rdquo;
In Sadowski &amp;amp; Thomas Zimmermann (eds.):
&lt;em&gt;Rethinking Productivity in Software Engineering&lt;/em&gt;,
Apress,
2019,
978-1484242209.&lt;/dd&gt;
&lt;dt&gt;&lt;span id=&#34;Sadowski2019&#34;&gt;Sadowski &amp;amp; Zimmermann 2019&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;Caitlin Sadowski and Thomas Zimmermann (eds.):
&lt;em&gt;Rethinking Productivity in Software Engineering.&lt;/em&gt;
Apress,
2019,
978-1484242209.&lt;/dd&gt;
&lt;dt&gt;&lt;span id=&#34;Sedano2017&#34;&gt;Sedano et al 2017&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;Todd Sedano, Paul Ralph, and CÃ©cile PÃ©raire:
&amp;ldquo;Software Development Waste&amp;rdquo;
&lt;em&gt;Proc. ICSE&amp;lsquo;17&lt;/em&gt;,
2017,
10.1109/ICSE.2017.20.&lt;/dd&gt;
&lt;dt&gt;&lt;span id=&#34;Storey2022&#34;&gt;Storey et al 2022&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;Margaret-Anne Storey, Brian Houck, and Thomas Zimmermann:
&amp;ldquo;How Developers and Managers Define and Trade Productivity for Quality&amp;rdquo;
&lt;em&gt;Proc. CHASE&amp;lsquo;22&lt;/em&gt;,
2022,
10.1145/3528579.3529177.&lt;/dd&gt;
&lt;/dl&gt;</content>
 </entry>
 
 <entry>
   <title>This Week&#39;s Posts</title>
   <link href="https://third-bit.com/2025/08/13/this-weeks-posts/"/>
   <updated>2025-08-13T00:00:00Z</updated>
   <id>https://third-bit.com/2025/08/13/this-weeks-posts/</id>
   <content type="html">&lt;p&gt;(Including one from two weeks ago.)&lt;/p&gt;
&lt;h2&gt;2025-07-30&lt;/h2&gt;
&lt;p&gt;You know what would be a really thought-provoking team project for undergrad software engineering students?
Building a dashboard that measures and reports programmers&amp;rsquo; productivity and identifies process bottlenecks.
Lots of coding,
lots of requirements gathering,
lots of UI design,
and &lt;em&gt;lots&lt;/em&gt; of &amp;ldquo;what the hell are we actually measuring and do we believe it&amp;rsquo;s meaningful?&amp;rdquo;
which would be the most illuminating part of the whole exercise for them.&lt;/p&gt;
&lt;h2&gt;2025-08-09&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://third-bit.com/2012/01/21/the-life-i-did-live-the-breath-i-breathed/&#34;&gt;My sister Sylvia&lt;/a&gt;
died of pancreatic cancer in 2012 at the age of 47,
leaving three teenage children behind.
The mRNA cancer vaccine being developed in the US was the best hope we&amp;rsquo;ve ever had to prevent this.
The Trump Administration&amp;rsquo;s decision to cut funding for this live-saving research based on pseudo-scientific hysteria
condemns more people like my sister to death and more children to grow up without their mothers.&lt;/p&gt;
&lt;h2&gt;2025-08-11&lt;/h2&gt;
&lt;p&gt;There is a lot of ageism in tech.
One reason,
I think,
is that 30-year-olds spouting recycled Y Combinator bullshit
don&amp;rsquo;t like having the obvious flaws and contradictions in their statements pointed out
by people who&amp;rsquo;ve lived through two or three previous hype cycles.
Not hiring the elderly ensures that they&amp;rsquo;re always in a high-adulation environment,
and never have to worry about whether staff will resist being guilted or bullied into sacrificing their personal lives
for someone else&amp;rsquo;s gain.&lt;/p&gt;
&lt;h2&gt;2025-08-12&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://andreas-zeller.info/&#34;&gt;Andreas Zeller&lt;/a&gt;&amp;rsquo;s work is the most admirable example of software engineering research I know of.
Over several decades he and his team have done deep theoretical work &lt;em&gt;and&lt;/em&gt; translated it into usable tools,
both to see if their ideas work in the real world and as a basis for dialog with developers about what problems to work on next.
(Go ahead, check out &lt;em&gt;&lt;a href=&#34;https://www.fuzzingbook.org/&#34;&gt;The Fuzzing Book&lt;/a&gt;&lt;/em&gt;
and &lt;em&gt;&lt;a href=&#34;https://www.debuggingbook.org/&#34;&gt;The Debugging Book&lt;/a&gt;&lt;/em&gt; â€”
you can thank me later.)&lt;/p&gt;
&lt;p&gt;If I could go back 20 years and re-start my failed attempt to become a researcher myself,
I would try to do the same thing,
but would focus on developer productivity.
More specifically,
I would try to build deployable tools &lt;em&gt;that programmers would actually use&lt;/em&gt;
to find bottlenecks in real-world development processes,
while simultaneously doing the theoretical work needed to figure out
&amp;ldquo;what do we actually mean by &amp;lsquo;productivity&amp;rsquo; and how do we tell if someone&amp;rsquo;s productive or not?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;There are lots of products in this space (Swarmia, Flow, etc.)
but I haven&amp;rsquo;t seen something that is
(a) open source,
(b) straightforward to deploy,
(c) actively being improved,
and (d) backed up by the kind of research that &lt;a href=&#34;https://www.drcathicks.com/&#34;&gt;Cat Hicks&lt;/a&gt;
and the contributors to &lt;a href=&#34;https://isbnsearch.org/isbn/9781484242209&#34;&gt;this book&lt;/a&gt; do.
I think that if we had something like this today,
a lot of the debate about whether AI makes programmers more productive would have a much higher signal-to-noise ratio.&lt;/p&gt;
&lt;h2&gt;2025-08-12&lt;/h2&gt;
&lt;p&gt;If you are using AI coding tools, please copy your prompt into the generated code as a comment (or have your agent do that):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You wrote a precise requirement spec - why throw it away?&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;ll help the next person understand the code.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s good context for the AI when you revise the code, too.&lt;/li&gt;
&lt;li&gt;It will help researchers who want to study these tools&amp;rsquo; accuracy and effectiveness.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s a good way to label code as &amp;ldquo;AI-generated&amp;rdquo; or &amp;ldquo;AI-assisted&amp;rdquo;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Thank you.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Workshops I Want</title>
   <link href="https://third-bit.com/2025/07/19/workshops-i-want/"/>
   <updated>2025-07-19T00:00:00Z</updated>
   <id>https://third-bit.com/2025/07/19/workshops-i-want/</id>
   <content type="html">&lt;p&gt;Following up on &lt;a href=&#34;https://third-bit.com/2025/07/18/no-satisfaction/&#34;&gt;yesterday&amp;rsquo;s post&lt;/a&gt;,
here are some workshops I&amp;rsquo;d really like to take.
If you&amp;rsquo;re offering any of them,
please let me know.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Experimental design and analysis for software engineers&lt;/strong&gt;
    who are trying to figure out how well their AI-based tools actually work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;An introduction to the social sciences for programmers&lt;/strong&gt;
    who want to understand how power actually works in our society.
    (See &lt;a href=&#34;https://third-bit.com/talks/sdgc/&#34;&gt;&lt;em&gt;Sex and Drugs and Guns and Code&lt;/em&gt;&lt;/a&gt; for some thoughts.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Distributed systems design by example&lt;/strong&gt;â€”basically,
    a sequel to &lt;a href=&#34;https://third-bit.com/sdxpy/&#34;&gt;&lt;em&gt;Software Design by Example&lt;/em&gt;&lt;/a&gt;
    in which learners build working models of distributed systems
    in order to understand how the real things work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Systems administration for data scientists&lt;/strong&gt;
    (or, what people who wrangle dataframes for a living need to know
    in order to deploy an application for others to use).
    This request is mostly professional curiosity:
    I&amp;rsquo;ve &lt;a href=&#34;https://gvwilson.github.io/sudonomicon/&#34;&gt;tried and failed&lt;/a&gt; to create this,
    and would like to see how others do it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Managing research software projects&lt;/strong&gt;â€”not &amp;ldquo;how to use Git&amp;rdquo;
    but hiring and firing,
    marketing,
    budgeting,
    succession planning,
    and similar challenges.
    Again,
    I&amp;rsquo;ve also &lt;a href=&#34;https://third-bit.com/mrsp/&#34;&gt;tried and failed to create this&lt;/a&gt;,
    so my interest here is partly professional curiosity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Organizational change for research software engineers&lt;/strong&gt;.
    We spend a lot of our time rolling rocks up hills;
    as I approach the end of my career,
    I&amp;rsquo;d really like someone to teach me how to get rid of the damn hills.
    &lt;em&gt;Note: we&amp;rsquo;re &lt;a href=&#34;https://gvwilson.github.io/change/&#34;&gt;working on this one&lt;/a&gt;;
    please reach out if you&amp;rsquo;d like to help.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;In a better world than this,
Canada would have a Natural Science and Engineering Education Council alongside NSERC
to fund the creation, dissemination, delivery, and evaluation of teaching and training materials.
Alas, that is not the timeline we&amp;rsquo;re inâ€¦&lt;/em&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>No Satisfaction</title>
   <link href="https://third-bit.com/2025/07/18/no-satisfaction/"/>
   <updated>2025-07-18T00:00:00Z</updated>
   <id>https://third-bit.com/2025/07/18/no-satisfaction/</id>
   <content type="html">&lt;p&gt;I don&amp;rsquo;t actually get much satisfaction from saying &amp;ldquo;I told you so&amp;rdquo;
because I only do it when the bad thing I was worried about has happened.
What motivates this observation is
the recent &lt;a href=&#34;https://metr.org/blog/2025-07-10-early-2025-ai-experienced-os-dev-study/&#34;&gt;METR paper&lt;/a&gt;
claiming that using AI lowers developers&amp;rsquo; productivity.
&lt;a href=&#34;https://bsky.app/profile/grimalkina.bsky.social/post/3ltpo634qc22l&#34;&gt;Cat Hicks&lt;/a&gt; and others
have done a better job of explaining the flaws in METR&amp;rsquo;s methodology than I possibly could.
What I want now is a workshop that teaches programmers
how to do trustworthy experiments on LLMs
and spot the mistakes in others&amp;rsquo; studies.&lt;/p&gt;
&lt;p&gt;Thousands and thousands of developers are trying to benchmark bots,
figure out if spicy autocomplete is making them more productive,
et endless cetera.
Most of those efforts are methodological and statistical dumpster fires;
while I don&amp;rsquo;t want to be cynical,
I think the same programmers who ignored &lt;a href=&#34;https://neverworkintheory.org/&#34;&gt;It Will Never Work in Theory&lt;/a&gt;
might pay attention to something with &amp;ldquo;AI&amp;rdquo; in its title.
Please,
someone,
save us from ourselvesâ€¦&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Books For a Talk</title>
   <link href="https://third-bit.com/2025/07/16/books-for-a-talk/"/>
   <updated>2025-07-16T00:00:00Z</updated>
   <id>https://third-bit.com/2025/07/16/books-for-a-talk/</id>
   <content type="html">&lt;p&gt;I&amp;rsquo;m finally turning &lt;a href=&#34;https://third-bit.com/ideas/sdgc/&#34;&gt;my proposal&lt;/a&gt; for a book titled
&lt;em&gt;Sex and Drugs and Guns and Code: What Everyone in Tech Needs to Know About Politics, Economics, Justice, and Power&lt;/em&gt;
into a talk.
The sources I plan to mention are listed below;
I&amp;rsquo;d be grateful for pointers to ones I&amp;rsquo;ve missed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: my target audience is undergraduates in computer science and software engineering
who have never taken a class on politics, sociology, anthropology, or organizational behavior,
but dismiss those disciplines as &amp;ldquo;soft&amp;rdquo;.
If forced to wade through something dense and dull
they will dutifully parrot what they think they&amp;rsquo;re supposed to in order to get a grade,
but not change their view of the world in any substantial way.
In order to have impact,
this book must be engaging;
serious academics may therefore dismiss it as &amp;ldquo;light&amp;rdquo; or &amp;ldquo;shallow&amp;rdquo;,
but there&amp;rsquo;s no point being right if no one hears you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Examples of humanist analyses in software engineering:&lt;ul&gt;
&lt;li&gt;Petre: &lt;a href=&#34;https://dl.acm.org/doi/10.5555/2486788.2486883&#34;&gt;&amp;ldquo;UML in Practice&amp;rdquo;&lt;/a&gt; (2013)&lt;/li&gt;
&lt;li&gt;Steinmacher et al: &lt;a href=&#34;https://doi.org/10.1145/2675133.2675215&#34;&gt;&amp;ldquo;Social Barriers Faced by Newcomers Placing Their First Contribution in Open Source Software Projects&amp;rdquo;&lt;/a&gt; (2015)&lt;/li&gt;
&lt;li&gt;Sedano et al: &lt;a href=&#34;http://dx.doi.org/10.1109/icse.2017.20&#34;&gt;&amp;ldquo;Software Development Waste&amp;rdquo;&lt;/a&gt; (2017)&lt;/li&gt;
&lt;li&gt;Hicks: &lt;a href=&#34;https://www.catharsisinsight.com/reports&#34;&gt;&amp;ldquo;It&amp;rsquo;s Like Coding in the Dark&amp;rdquo;&lt;/a&gt; (2022)&lt;/li&gt;
&lt;li&gt;See &lt;a href=&#34;https://third-bit.com/2022/12/29/the-fourth-tradition/&#34;&gt;The Fourth Tradition&lt;/a&gt; for more background&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What &lt;a href=&#34;https://third-bit.com/2024/12/03/software-engineering-management-books/&#34;&gt;software engineering management books&lt;/a&gt; &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; talk about:&lt;ul&gt;
&lt;li&gt;Labor rights&lt;/li&gt;
&lt;li&gt;Workplace discrimination: less than 8 pages between 12 books&lt;/li&gt;
&lt;li&gt;Professional liability (or rather, why there isn&amp;rsquo;t any)&lt;/li&gt;
&lt;li&gt;Regulatory capture&lt;/li&gt;
&lt;li&gt;Co-operatives and other organizational models&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Books that are earnest but will put most programmers to sleep:&lt;ul&gt;
&lt;li&gt;Steen: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780367542436&#34;&gt;Ethics for People Who Work in Tech&lt;/a&gt;&lt;/em&gt; (2022)&lt;/li&gt;
&lt;li&gt;Goltz &amp;amp; Dowdesell: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781032275055&#34;&gt;Real World AI Ethics for Data Scientists&lt;/a&gt;&lt;/em&gt; (2023)&lt;/li&gt;
&lt;li&gt;Schlossberger: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781032151120&#34;&gt;Ethical Engineering: A Practical Guide with Case Studies&lt;/a&gt;&lt;/em&gt; (2023)&lt;/li&gt;
&lt;li&gt;Wendorff: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781484273791&#34;&gt;Politics in Software Development&lt;/a&gt;&lt;/em&gt;(2022)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Books that prove these topics can be interesting:&lt;ul&gt;
&lt;li&gt;Levitt &amp;amp; Dubner: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780061234002&#34;&gt;Freakonomics&lt;/a&gt;&lt;/em&gt; (2006)&lt;ul&gt;
&lt;li&gt;Preaches the neoliberal gospel that the only valid way to analyze individual behavior is maximization of wealthâ€¦&lt;/li&gt;
&lt;li&gt;â€¦which is provably wrong, but their writing is so engaging that this is possibly the most effective piece of propaganda in English in the last 30 years&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Wainright: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781610397704&#34;&gt;Narconomics: How to Run a Drug Cartel&lt;/a&gt;&lt;/em&gt; (2017)&lt;ul&gt;
&lt;li&gt;Turns out that marketing and HR are big challenges for crime syndicatesâ€¦&lt;/li&gt;
&lt;li&gt;â€¦and you can learn a lot about how legitimate business works by looking at ones that ignore the legal system&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;d like to see a book comparing big tech to drug cartels&lt;ul&gt;
&lt;li&gt;Big tech companies sell deliberately addictive productsâ€¦&lt;/li&gt;
&lt;li&gt;â€¦treat the law as a business expenseâ€¦&lt;/li&gt;
&lt;li&gt;â€¦and are frequently run by narcissists&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Raymond: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781565927247&#34;&gt;The Cathedral and the Bazaar&lt;/a&gt;&lt;/em&gt; (1999)&lt;ul&gt;
&lt;li&gt;Popularized a compelling but misleading myth about the social organization of open source development&lt;/li&gt;
&lt;li&gt;Part of the point of &lt;em&gt;this&lt;/em&gt; book is to get readers to the point where they understand why it was wrong &lt;em&gt;and&lt;/em&gt; why it was popular&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bellotti: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781718501188&#34;&gt;Kill It With Fire: Manage Aging Computer Systems (and Future Proof Modern Ones)&lt;/a&gt;&lt;/em&gt; (2021)&lt;ul&gt;
&lt;li&gt;A critical but compassionate look at legacy systems, why they persist, and how to change them&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Books that I think every software engineer should read (but know they won&amp;rsquo;t, hence the needed to summarize):&lt;ul&gt;
&lt;li&gt;Douglas: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780415289955&#34;&gt;Purity and Danger: An Analysis of Concepts of Pollution and Taboo&lt;/a&gt;&lt;/em&gt; (2002)&lt;/li&gt;
&lt;li&gt;Davies: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781982114947&#34;&gt;Lying for Money: How Legendary Frauds Reveal the Workings of the World&lt;/a&gt;&lt;/em&gt; (2022)&lt;/li&gt;
&lt;li&gt;Baetjer: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780818677793&#34;&gt;Software as Capital: An Economic Perspective on Software Engineering&lt;/a&gt;&lt;/em&gt; (1997)&lt;/li&gt;
&lt;li&gt;Scott: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780300078152&#34;&gt;Seeing Like a State: How Certain Schemes to Improve the Human Condition Have Failed&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Phillips Rozworski: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781786635167&#34;&gt;The People&amp;rsquo;s Republic of Walmart&lt;/a&gt;&lt;/em&gt; (2019)&lt;/li&gt;
&lt;li&gt;Wilkinson &amp;amp; Pickett: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781608193417&#34;&gt;The Spirit Level&lt;/a&gt;&lt;/em&gt; (2011)&lt;/li&gt;
&lt;li&gt;Achen &amp;amp; Bartels: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780691178240&#34;&gt;Democracy for Realists: Why Elections Do Not Produce Responsive Government&lt;/a&gt;&lt;/em&gt; (2017)&lt;/li&gt;
&lt;li&gt;de Mesquita &amp;amp; Smith: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781541701366&#34;&gt;The Dictator&amp;rsquo;s Handbook: Why Bad Behavior is Almost Always Good Politics&lt;/a&gt;&lt;/em&gt; (2022)&lt;/li&gt;
&lt;li&gt;Linklater: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781620402917&#34;&gt;Owning the Earth: The Transforming History of Land Ownership&lt;/a&gt;&lt;/em&gt; (2015)&lt;/li&gt;
&lt;li&gt;Bracha: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9781108790697&#34;&gt;Owning Ideas: The Intellectual Origins of American Intellectual Property, 1790â€“1909&lt;/a&gt;&lt;/em&gt; (2019)&lt;/li&gt;
&lt;li&gt;Igo: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9780674244795&#34;&gt;The Known Citizen: A History of Privacy in Modern America&lt;/a&gt;&lt;/em&gt; (2020)&lt;/li&gt;
&lt;li&gt;Young: &lt;em&gt;&lt;a href=&#34;https://isbnsearch.org/isbn/9798887440330&#34;&gt;Abolishing Fossil Fuels: Lessons From Movements That Won&lt;/a&gt;&lt;/em&gt; (2024)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most young programmers have only ever been exposed to one worldview:
the toxic strain of neoliberal capitalism favored by venture capitalists and their gushing fans in the tech media.
As inequality widens and racist nationalism makes a comeback,
as we do everything in our power to make climate change &lt;em&gt;worse&lt;/em&gt;
while companies like X, Facebook, and Shopify tie themselves in knots to avoid responsibility for their actions,
most programmers don&amp;rsquo;t have the intellectual tools to understand what&amp;rsquo;s wrong and how we might fix it.&lt;/p&gt;
&lt;p&gt;Lots of books give cogent answers to these questions,
but programmers who have never done a civics course
are not going to read nine thousand pages on a whim.
However,
they &lt;em&gt;might&lt;/em&gt; sit through a one-semester course that explains why the human side of software engineering
is harder than the technical side.
This talk outlines what such a course might cover:
why &amp;ldquo;flat&amp;rdquo; organizations make power imbalances worse rather than better,
why discrimination persists despite its economic inefficiency,
how regulatory capture works,
why Americans keep shooting one another,
and what can we learn about big tech by studying drug cartels.&lt;/p&gt;
&lt;/blockquote&gt;</content>
 </entry>
 
 <entry>
   <title>Some Testing Answers</title>
   <link href="https://third-bit.com/2025/05/19/some-testing-answers/"/>
   <updated>2025-05-19T00:00:00Z</updated>
   <id>https://third-bit.com/2025/05/19/some-testing-answers/</id>
   <content type="html">&lt;p&gt;A month ago I &lt;a href=&#34;https://third-bit.com/2025/04/20/a-testing-question/&#34;&gt;asked for advice&lt;/a&gt; on testing a little piece of Python
that fills a grid using a random walk.
&lt;a href=&#34;https://stochasticsolutions.com/&#34;&gt;Nick Radcliffe&lt;/a&gt;,
a former colleague who is writing a book on test-driven data analysis,
suggested that one way to test the code is to put move generation in a function of its own,
call that function a few hundred times,
and check that the results are evenly distributed
(e.g., each of the four moves appears 20-30% of the time).
If not,
double the number of moves generated,
check again,
and repeat until either the distribution converges
or you decide that it&amp;rsquo;s not going to.
This approach ensures that tests run quickly most of the time,
and it did indeed catch a bug when I moved from 4-way steps to 8-way (i.e., allowed diagonal moves).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nathanfurnal.xyz/&#34;&gt;Nathan Furnal&lt;/a&gt; suggested a similar approach.
If we generate 30 moves,
the probability of never seeing one of the four possible moves is less than 0.02%.
If we increase the number of moves to 100 (which only takes 61 microseconds on my five-year-old laptop)
the odds of not seeing one of the moves drop to one in 10&lt;sup&gt;13&lt;/sup&gt;.
If we&amp;rsquo;re running the tests 1000 times a day,
we can expect one false positive every ten million years or so.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve added both tests to my test suite,
but would appreciate suggestions for others.
Testing in the face of randomness is more common and more important in (data) science
than in commercial software development;
as more and more applications incorporate small household spirits (i.e., genAI),
we&amp;rsquo;re going to have to figure out how to do this well.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Two Thirds of a Language</title>
   <link href="https://third-bit.com/2025/05/18/two-thirds-of-a-language/"/>
   <updated>2025-05-18T00:00:00Z</updated>
   <id>https://third-bit.com/2025/05/18/two-thirds-of-a-language/</id>
   <content type="html">&lt;p&gt;Inspired in part by posts online about this year&amp;rsquo;s PyCon,
I started to wonder how much of the language I actually use.
To answer the question,
I counted how many different types of nodes are provided by &lt;a href=&#34;https://docs.python.org/3/library/ast.html&#34;&gt;Python&amp;rsquo;s &lt;code&gt;ast&lt;/code&gt; module&lt;/a&gt;
and how many of those show up in the code I wrote for
&lt;a href=&#34;https://third-bit.com/sdxpy/&#34;&gt;&lt;em&gt;Software Design by Example&lt;/em&gt;&lt;/a&gt;.
The answer appears to be 60%,
i.e.,
I use a bit less than two-thirds of what Python 3.12 offers.
Other measures would give other answersâ€”for example,
I expect that I use much, much less than 60% of Python&amp;rsquo;s standard libraryâ€”but still,
it&amp;rsquo;s kind of interesting.&lt;/p&gt;
&lt;p&gt;I hope everyone&amp;rsquo;s having fun in Pittsburghâ€¦&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Code&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;ast&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;pathlib&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ast_dict&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;getattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;available&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ast_dict&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;used&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;used&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;walk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;SyntaxError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;available: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;available&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;used: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;used&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;percentage: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;used&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;available&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.1f&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;unused&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;available&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;used&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;The Output&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;available: 136
used: 81
percentage: 59.6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Appearance on SustainOSS Podcast</title>
   <link href="https://third-bit.com/2025/05/16/appearance-on-sustain-oss/"/>
   <updated>2025-05-16T00:00:00Z</updated>
   <id>https://third-bit.com/2025/05/16/appearance-on-sustain-oss/</id>
   <content type="html">&lt;p&gt;Richard Littauer interviews Marianne Bellotti and yours truly on the &lt;a href=&#34;https://podcast.sustainoss.org/269&#34;&gt;SustainOSS podcast&lt;/a&gt;
about the paper &amp;ldquo;&lt;a href=&#34;https://arxiv.org/abs/2505.06484&#34;&gt;10 quick tips for making your software outlive your job&lt;/a&gt;&amp;rdquo;.
I sound like I&amp;rsquo;m speaking from the bottom of a fifty gallon drum,
but I hope it&amp;rsquo;s worth listening to despite that.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>We Weren&#39;t Ready for the Flood</title>
   <link href="https://third-bit.com/2025/05/01/we-werent-ready-for-the-flood/"/>
   <updated>2025-05-01T00:00:00Z</updated>
   <id>https://third-bit.com/2025/05/01/we-werent-ready-for-the-flood/</id>
   <content type="html">&lt;p&gt;In the end I decided not to go to &lt;a href=&#34;https://conf.researchr.org/home/icse-2025&#34;&gt;ICSE 2025&lt;/a&gt; in Ottawa.
I would have enjoyed catching up with friends
and having coffee with people I&amp;rsquo;ve only ever chatted to online,
but I couldn&amp;rsquo;t justify the time and expense.
I also didn&amp;rsquo;t know what I could say that people wouldn&amp;rsquo;t have grown tired of hearing:
as &lt;a href=&#34;https://third-bit.com/2020/07/09/acm-sigsoft-award/&#34;&gt;I wrote in 2020&lt;/a&gt;,
I&amp;rsquo;ve had no impact on software engineering research or education despite years of trying,
and I think people have grown weary of my jeremiads.&lt;/p&gt;
&lt;p&gt;If I &lt;em&gt;had&lt;/em&gt; gone,
though,
here&amp;rsquo;s what I would have said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We have been studying software engineers and software engineering for over fifty years.
Despite that,
we still don&amp;rsquo;t have an agreed-upon way to measure developers&amp;rsquo; productivity,
which means we can&amp;rsquo;t answer the question,
&amp;ldquo;Is AI helping or not?&amp;rdquo;
And we still don&amp;rsquo;t teach empirical software engineering to undergraduates,
which means that most programmers don&amp;rsquo;t know enough to know that
most of the answers they&amp;rsquo;re seeing and hearing aren&amp;rsquo;t just wrong,
they&amp;rsquo;re nonsensical.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The flood came and we weren&amp;rsquo;t ready;
I wish I believed that we would be for the next one.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Why yes, I &lt;em&gt;do&lt;/em&gt; have a suggestion about how to get ready:
turn &lt;em&gt;&lt;a href=&#34;https://link.springer.com/book/10.1007/978-1-4842-4221-6&#34;&gt;Rethinking Productivity in Software Engineering&lt;/a&gt;&lt;/em&gt;
into an undergraduate course
that teaches students the methods used to answer questions like this,
how to use those methods themselves,
and how to tell good science from splackulent crap
like the &amp;ldquo;ghost engineers&amp;rdquo; screed that got so much attention in late 2024.
I realize data science no longer makes university administrators salivate the way it did a few years ago,
but if you call the course &amp;ldquo;Data Science for Software Engineers&amp;rdquo;
you&amp;rsquo;re bound to get a few takers.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Lazy Loading a Data Package</title>
   <link href="https://third-bit.com/2025/04/21/lazy-loading-data-package/"/>
   <updated>2025-04-21T00:00:00Z</updated>
   <id>https://third-bit.com/2025/04/21/lazy-loading-data-package/</id>
   <content type="html">&lt;p&gt;&lt;em&gt;Later: see the bottom of this post for a much less frightening solution.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;R has the notion of a &amp;ldquo;data package&amp;rdquo;,
which looks and feels like a code package
except its primary purpose is to provide a dataset.
One of the key features of such packages is that the data isn&amp;rsquo;t loaded into memory
unless and until it&amp;rsquo;s needed,
which is known as &lt;em&gt;lazy loading&lt;/em&gt;.
The code below shows my attempt to do this in Python;
I&amp;rsquo;d &lt;a href=&#34;mailto:gvwilson@third-bit.com&#34;&gt;be grateful&lt;/a&gt; for pointers to prior art
and advice on how to simplify it.&lt;/p&gt;
&lt;h2&gt;Desired Outcome&lt;/h2&gt;
&lt;p&gt;Importing the package does &lt;em&gt;not&lt;/em&gt; load the data.
Instead,
each dataset in the package is loaded into memory the first time it is referenced.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;example&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;# data not loaded&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;machines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;# &amp;#39;machines&amp;#39; data loaded here&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;persons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;# &amp;#39;persons&amp;#39; data loaded here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;What the Package Author Writes&lt;/h2&gt;
&lt;p&gt;The programmer who wants to provide the data package must:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;define a class derived from &lt;code&gt;BaseDatasetLoader&lt;/code&gt;
    with a zero-argument method for each dataset;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mark those methods as &lt;a href=&#34;https://docs.python.org/3/library/functools.html#functools.cached_property&#34;&gt;cached properties&lt;/a&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;call their classes&amp;rsquo; &lt;code&gt;install&lt;/code&gt; method with their module&amp;rsquo;s name as an argument;
    and&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;put their data files in a directory called &lt;code&gt;data&lt;/code&gt; in the top level of their project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example,
the package &lt;code&gt;example&lt;/code&gt; that provides persons and machines would be structured like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;.
â”œâ”€â”€ data
â”‚   â”œâ”€â”€ machines.csv
â”‚   â””â”€â”€ persons.csv
â”œâ”€â”€ example
â”‚   â””â”€â”€ __init__.py
â””â”€â”€ pyproject.toml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here&amp;rsquo;s the code in &lt;code&gt;__init__.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;functools&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cached_property&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;datapkg.package&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BaseDatasetLoader&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;_Loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseDatasetLoader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Example dataset loader.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@cached_property&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;machines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;machines.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@cached_property&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;persons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;persons.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Set up lazy loading - automatically discovers cached properties&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;_Loader&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;install&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;d like to find a way to automate the installation step
so that programmers only have to define the class,
but I haven&amp;rsquo;t figured out a way yet.&lt;/p&gt;
&lt;h2&gt;Behind the Curtain&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;datapkg&lt;/code&gt; library defines three things,
two of which programmers (hopefully) won&amp;rsquo;t need to know about.
The thing they &lt;em&gt;do&lt;/em&gt; need to be aware of is
the base class from which their data loader classes are derived.
For demo purposes,
&lt;code&gt;BaseDatasetLoader&lt;/code&gt; assumes (i.e., requires) that data lives in a &lt;code&gt;data&lt;/code&gt; directory
beside the package source code directory
and that there is a cached property in the user-defined class derived from &lt;code&gt;BaseDatasetLoader&lt;/code&gt;
corresponding to each of the datasets:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;BaseDatasetLoader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Base class for dataset loaders.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Where datasets are located.&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@classmethod&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;discover_cached_properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Discover all cached_property attributes in this class (i.e., datasets).&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;attr&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inspect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getmembers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cached_property&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@classmethod&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;install&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Set up lazy loading for a data package.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&#34;n&#34;&gt;loader_instance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;exported_names&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;discover_cached_properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;create_lazy_package&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loader_instance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exported_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Load data from a CSV file.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseDatasetLoader&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;joinpath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;BaseDatasetLoader&lt;/code&gt; relies on &lt;code&gt;create_lazy_package&lt;/code&gt;,
which looks up a module and replaces it with a lazy-loading module,
copying over the attributes of the original model along the way
and then exporting all the module&amp;rsquo;s names:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;create_lazy_package&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Set up lazy loading for a data package.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;original_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;lazy_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;lazy_module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__dict__&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;original_module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__dict__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lazy_module&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;lazy_module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__all__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;names&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;names&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally,
&lt;code&gt;LazyModule&lt;/code&gt; intercepts attempts to get the module&amp;rsquo;s attributes
and defers them to the user-defined class derived from &lt;code&gt;BaseDatasetLoader&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;LazyModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;types&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ModuleType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;A module that lazily loads datasets when attributes are accessed.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Initialize a lazy module.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_loader&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loader&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__getattr__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Get an attribute from the loader when not found in the module.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;getattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;AttributeError&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;AttributeError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Module &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39; has no attribute &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;exc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Building the Package&lt;/h2&gt;
&lt;p&gt;Life&amp;rsquo;s not complete these days without a &lt;code&gt;pyproject.toml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;example&amp;quot;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;0.1.0&amp;quot;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;description&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;An example data package&amp;quot;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dependencies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;requires&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;gt;=3.11&amp;quot;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;requires&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;hatchling&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;hatchling.build&amp;quot;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hatch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wheel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;datapkg&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hatch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;force&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The trick is that last line,
which forces the build system to include the contents of the &lt;code&gt;data&lt;/code&gt; directory in the package.
(And yes, both uses of the word &lt;code&gt;data&lt;/code&gt; in that line must be quoted:
it&amp;rsquo;s TOML&amp;rsquo;s way of defining a key-value table.
I miss my &lt;code&gt;package.json&lt;/code&gt; files every dayâ€¦)&lt;/p&gt;
&lt;h2&gt;The Simpler Version&lt;/h2&gt;
&lt;p&gt;The solution described above is very complex,
and it would be unreasonable to expect most data scientists to debug subtle mistakes.
If we are willing to use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;datapkg&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datapkg&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datapkg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;machines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then the &lt;code&gt;pyproject.toml&lt;/code&gt; file stays as it is and the Python becomes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;csv&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;functools&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cached_property&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;importlib&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;_loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@cached_property&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;machines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;machines.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@cached_property&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;persons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;persons.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;_load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Load data from a CSV file.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;loading &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;joinpath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;datapkg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_loader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;__all__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;datapkg&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The Even Simpler Version&lt;/h2&gt;
&lt;p&gt;Nat Knight suggested an even simpler approach:
use &lt;a href=&#34;https://peps.python.org/pep-0562/&#34;&gt;a module-level &lt;code&gt;__getattr__&lt;/code&gt; function&lt;/a&gt;.
I didn&amp;rsquo;t even know these existed,
but they make the code &lt;em&gt;much&lt;/em&gt; easier to understand:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;csv&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;importlib&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;AVAILABLE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;machines&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;machines.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;cached&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;persons&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;persons.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;cached&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__getattr__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AVAILABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;AttributeError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; does not have &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AVAILABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;cached&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;cached&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;cached&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;_load_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATA_DIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;joinpath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thanks, Natâ€”this is what I&amp;rsquo;m going with.
But also:
damn,
I remember when Python was a small enough language that I actually understood itâ€¦&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>A Testing Question</title>
   <link href="https://third-bit.com/2025/04/20/a-testing-question/"/>
   <updated>2025-04-20T00:00:00Z</updated>
   <id>https://third-bit.com/2025/04/20/a-testing-question/</id>
   <content type="html">&lt;p&gt;I have been thinking some more about how to teach testing to scientists who are learning how to program,
and I&amp;rsquo;m hoping one of my readers will have suggestions.
The bit of Python below creates a square NxN grid and then fills it using a random orthogonal walk.
Each time the walker visits a cell, the cell&amp;rsquo;s count is incremented;
filling stops when the walker reaches the boundary (i.e., absorbing boundary conditions).&lt;/p&gt;
&lt;p&gt;How can I test this?
The easy bits are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generate a few hundred grids and make sure the boundary cells are all zero.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compare the sum of the grid values with the number of moves made by the walker (they should be equal).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Patch the random choice function to force a series of moves (e.g., always up) and then check the resulting grid.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, these tests are necessary but not sufficient.
If my choice of moves was biased in some direction,
for example,
none of these tests would reveal that.
If I generate enough grids and look at the distribution of values,
it should approximate a 2D Gaussian,
but I&amp;rsquo;d have to generate a &lt;em&gt;lot&lt;/em&gt; of grids to get close,
and it&amp;rsquo;s difficult to specify what &amp;ldquo;close&amp;rdquo; actually means.
Is 20% relative error after 1000 grids good enough?
That test will pass for some random number generation seeds and fail for others;
I could tweak the seed until the test passes,
but that feels as grubby as &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_dredging&#34;&gt;p-hacking&lt;/a&gt;.
If you have suggestions,
please &lt;a href=&#34;mailto:gvwilson@third-bit.com&#34;&gt;get in touch&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;The Code&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;argparse&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;csv&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;io&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Store a grid of numbers.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Construct empty grid.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Grid size must be positive not &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__getitem__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Get grid element.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__setitem__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Set grid element.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__str__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Convert to string.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringIO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writerows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getvalue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;cmdline_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Parse command-line arguments.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argparse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;--seed&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;required&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;RNG seed&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;--size&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;required&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;grid size&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;fill_grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Fill in a grid.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;moves&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;center&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;size_1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;center&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;moves&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmdline_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;fill_grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The Reveal&lt;/h2&gt;
&lt;p&gt;Did you notice the bug?
&lt;code&gt;[0, -1]&lt;/code&gt; is repeated in the list of available moves;
the last entry should be &lt;code&gt;[0, 1]&lt;/code&gt;.
This was an actual typo in an early draft of this function,
and none of my tests spotted it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The boundary cells of all grids are still zero.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The sum of the grid&amp;rsquo;s values is still the number of moves.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Patching the random choice function to force a series of moves
    &lt;em&gt;fixes the underlying bug&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If I had used &lt;code&gt;random.choice(list(range(len(moves))))&lt;/code&gt; to choose an index into &lt;code&gt;moves&lt;/code&gt;
and then used that move,
the final test might have revealed the problem,
but none of my statistical tests detected it,
and that scares me.&lt;/p&gt;
&lt;h2&gt;Another Example&lt;/h2&gt;
&lt;p&gt;Another way to fill a grid is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Invasion_percolation&#34;&gt;invasion percolation&lt;/a&gt;.
In pseudo-Python, it works like thisâ€”or rather,
this code &lt;em&gt;almost&lt;/em&gt; does the right thing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;invasion_percolation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Create grid of random numbers&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Mark the central cell&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MARKED&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Repeat until the marked region hits the boundary&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;find_next_cell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MARKED&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Find the next cell to fill&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;find_next_cell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Set min_val to Infinity to ensure first cell qualifies&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;min_x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Infinity&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Check all cells&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# Already filled&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MARKED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# Not adjacent to a marked cell&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adjacent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# We have seen a lower value&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# A new winner&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;min_x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Report results&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Did you spot the problem?
I didn&amp;rsquo;t:
I used a variation of this code for more than a year before realizing that
it is biased toward the (0, 0) corner of the grid.
To see why,
imagine that the entire &amp;ldquo;random&amp;rdquo; grid is filled with the value 1.
The first cell that the double loop finds
that&amp;rsquo;s adjacent to the already-filled region
will always be to the lower left of the filled region,
because that will always be the first time the double loop encounters the value 1.
Replacing the 1&amp;rsquo;s with random number in the range 0â€¦depth doesn&amp;rsquo;t fix this flaw;
it just makes it harder to spot.&lt;/p&gt;
&lt;p&gt;The solution in this case is to find all the cells
that are adjacent to the already-filled region
&lt;em&gt;and&lt;/em&gt; which are tied for lowest value,
then choose one of those at random.
My question is,
what test(s) could I plausibly have written before I realized my mistake
that would have told me my implementation had introduced an unwanted bias?&lt;/p&gt;</content>
 </entry>
 
</feed>